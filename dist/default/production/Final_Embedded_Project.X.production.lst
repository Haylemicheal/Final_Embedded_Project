

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Jan  7 00:46:44 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F43K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           ; Version 2.05
    23                           ; Generated 20/12/2018 GMT
    24                           ; 
    25                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F43K22 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     _ANSELDbits	set	3899
    57  0000                     _ANSELBbits	set	3897
    58  0000                     _ANSELC	set	3898
    59  0000                     _ANSELAbits	set	3896
    60  0000                     _PORTBbits	set	3969
    61  0000                     _ADRESL	set	4035
    62  0000                     _ADCON0bits	set	4034
    63  0000                     _ADCON2	set	4032
    64  0000                     _ADCON0	set	4034
    65  0000                     _SSP1CON1bits	set	4038
    66  0000                     _SSP1CON2	set	4037
    67  0000                     _SSP1ADD	set	4040
    68  0000                     _SSP1CON1	set	4038
    69  0000                     _SSP1STAT	set	4039
    70  0000                     _SSP1BUF	set	4041
    71  0000                     _IOCBbits	set	3938
    72  0000                     _INTCONbits	set	4082
    73  0000                     _PIE1bits	set	3997
    74  0000                     _PIR1bits	set	3998
    75  0000                     _LATCbits	set	3979
    76  0000                     _TRISAbits	set	3986
    77  0000                     _LATD	set	3980
    78  0000                     _LATC	set	3979
    79  0000                     _LATB	set	3978
    80  0000                     _LATA	set	3977
    81  0000                     _OSCTUNE	set	3995
    82  0000                     _OSCCON2bits	set	4050
    83  0000                     _OSCCONbits	set	4051
    84  0000                     _LATC1	set	31833
    85  0000                     _LATC0	set	31832
    86  0000                     _LATC2	set	31834
    87  0000                     _IPEN	set	32391
    88  0000                     _TRISC2	set	31906
    89  0000                     _TRISC1	set	31905
    90  0000                     _TRISC0	set	31904
    91  0000                     _TRISD5	set	31917
    92  0000                     _TRISB5	set	31901
    93  0000                     _TRISA5	set	31893
    94  0000                     _TRISC5	set	31909
    95  0000                     _TRISC4	set	31908
    96  0000                     _TRISC3	set	31907
    97                           
    98                           ; #config settings
    99  0000                     
   100                           	psect	cinit
   101  0000DE                     __pcinit:
   102                           	opt callstack 0
   103  0000DE                     start_initialization:
   104                           	opt callstack 0
   105  0000DE                     __initialization:
   106                           	opt callstack 0
   107                           
   108                           ; Clear objects allocated to COMRAM (7 bytes)
   109  0000DE  EE00  F001         	lfsr	0,__pbssCOMRAM
   110  0000E2  0E07               	movlw	7
   111  0000E4                     clear_0:
   112  0000E4  6AEE               	clrf	postinc0,c
   113  0000E6  06E8               	decf	wreg,f,c
   114  0000E8  E1FD               	bnz	clear_0
   115  0000EA                     end_of_initialization:
   116                           	opt callstack 0
   117  0000EA                     __end_of__initialization:
   118                           	opt callstack 0
   119  0000EA  9008               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   120  0000EC  9208               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   121  0000EE  0100               	movlb	0
   122  0000F0  EF2E  F000         	goto	_main	;jump to C main() function
   123                           
   124                           	psect	bssCOMRAM
   125  000001                     __pbssCOMRAM:
   126                           	opt callstack 0
   127  000001                     _ADC_VALUE:
   128                           	opt callstack 0
   129  000001                     	ds	2
   130  000003                     _ADC_Value:
   131                           	opt callstack 0
   132  000003                     	ds	2
   133  000005                     _msg:
   134                           	opt callstack 0
   135  000005                     	ds	1
   136  000006                     _recived:
   137                           	opt callstack 0
   138  000006                     	ds	1
   139  000007                     _digital_value:
   140                           	opt callstack 0
   141  000007                     	ds	1
   142                           
   143                           	psect	cstackCOMRAM
   144  000000                     __pcstackCOMRAM:
   145                           	opt callstack 0
   146  000000                     
   147                           ; 1 bytes @ 0x0
   148 ;;
   149 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   150 ;;
   151 ;; *************** function _main *****************
   152 ;; Defined at:
   153 ;;		line 11 in file "main.c"
   154 ;; Parameters:    Size  Location     Type
   155 ;;		None
   156 ;; Auto vars:     Size  Location     Type
   157 ;;		None
   158 ;; Return value:  Size  Location     Type
   159 ;;                  1    wreg      void 
   160 ;; Registers used:
   161 ;;		wreg, status,2, status,0, cstack
   162 ;; Tracked objects:
   163 ;;		On entry : 0/0
   164 ;;		On exit  : 0/0
   165 ;;		Unchanged: 0/0
   166 ;; Data sizes:     COMRAM   BANK0   BANK1
   167 ;;      Params:         0       0       0
   168 ;;      Locals:         0       0       0
   169 ;;      Temps:          0       0       0
   170 ;;      Totals:         0       0       0
   171 ;;Total ram usage:        0 bytes
   172 ;; Hardware stack levels required when called:    4
   173 ;; This function calls:
   174 ;;		_SETUP
   175 ;;		_START_ADC
   176 ;; This function is called by:
   177 ;;		Startup code after reset
   178 ;; This function uses a non-reentrant model
   179 ;;
   180                           
   181                           	psect	text0
   182  00005C                     __ptext0:
   183                           	opt callstack 0
   184  00005C                     _main:
   185                           	opt callstack 27
   186                           
   187                           ;main.c: 12:     SETUP();
   188                           
   189                           ;incstack = 0
   190  00005C  EC7A  F000         	call	_SETUP	;wreg free
   191  000060                     l957:
   192                           
   193                           ;main.c: 17:     {;main.c: 18:         START_ADC();
   194  000060  ECA1  F000         	call	_START_ADC	;wreg free
   195                           
   196                           ;main.c: 22:         if(recived==0xFF){
   197  000064  2806               	incf	_recived,w,c
   198  000066  A4D8               	btfss	status,2,c
   199  000068  D002               	goto	l963
   200                           
   201                           ;main.c: 23:             msg = 0x09;
   202  00006A  0E09               	movlw	9
   203  00006C  D00E               	goto	L1
   204  00006E                     l963:
   205  00006E  0406               	decf	_recived,w,c
   206  000070  A4D8               	btfss	status,2,c
   207  000072  D003               	goto	l967
   208                           
   209                           ;main.c: 27:             msg = ADC_VALUE;
   210  000074  C001  F005         	movff	_ADC_VALUE,_msg
   211                           
   212                           ;main.c: 28:         }
   213  000078  D009               	goto	l973
   214  00007A                     l967:
   215  00007A  0E03               	movlw	3
   216  00007C  1806               	xorwf	_recived,w,c
   217  00007E  A4D8               	btfss	status,2,c
   218  000080  D003               	goto	l971
   219                           
   220                           ;main.c: 30:             msg = digital_value;
   221  000082  C007  F005         	movff	_digital_value,_msg
   222                           
   223                           ;main.c: 31:         }
   224  000086  D002               	goto	l973
   225  000088                     l971:
   226                           
   227                           ;main.c: 33:             msg = 0x00;
   228  000088  0E00               	movlw	0
   229  00008A                     L1:
   230  00008A  6E05               	movwf	_msg,c
   231  00008C                     l973:
   232                           
   233                           ;main.c: 35:         SSP1BUF = msg;
   234  00008C  C005  FFC9         	movff	_msg,4041	;volatile
   235  000090  D7E7               	goto	l957
   236  000092                     __end_of_main:
   237                           	opt callstack 0
   238                           
   239 ;; *************** function _START_ADC *****************
   240 ;; Defined at:
   241 ;;		line 19 in file "ADC.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		None
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMRAM   BANK0   BANK1
   255 ;;      Params:         0       0       0
   256 ;;      Locals:         0       0       0
   257 ;;      Temps:          0       0       0
   258 ;;      Totals:         0       0       0
   259 ;;Total ram usage:        0 bytes
   260 ;; Hardware stack levels used:    1
   261 ;; Hardware stack levels required when called:    2
   262 ;; This function calls:
   263 ;;		Nothing
   264 ;; This function is called by:
   265 ;;		_main
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           	psect	text1
   270  000142                     __ptext1:
   271                           	opt callstack 0
   272  000142                     _START_ADC:
   273                           	opt callstack 28
   274                           
   275                           ;ADC.c: 21:     ADCON0bits.GO = 1;
   276                           
   277                           ;incstack = 0
   278  000142  82C2               	bsf	4034,1,c	;volatile
   279  000144  0012               	return		;funcret
   280  000146                     __end_of_START_ADC:
   281                           	opt callstack 0
   282                           
   283 ;; *************** function _SETUP *****************
   284 ;; Defined at:
   285 ;;		line 5 in file "PIC_SETUP.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, status,2, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMRAM   BANK0   BANK1
   299 ;;      Params:         0       0       0
   300 ;;      Locals:         0       0       0
   301 ;;      Temps:          0       0       0
   302 ;;      Totals:         0       0       0
   303 ;;Total ram usage:        0 bytes
   304 ;; Hardware stack levels used:    1
   305 ;; Hardware stack levels required when called:    3
   306 ;; This function calls:
   307 ;;		_INIT_ADC
   308 ;;		_SPI1_Initialize
   309 ;;		_init_interrupts
   310 ;;		_init_pins
   311 ;;		_set_oscilators
   312 ;; This function is called by:
   313 ;;		_main
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           	psect	text2
   318  0000F4                     __ptext2:
   319                           	opt callstack 0
   320  0000F4                     _SETUP:
   321                           	opt callstack 27
   322                           
   323                           ;PIC_SETUP.c: 7:     set_oscilators();
   324                           
   325                           ;incstack = 0
   326  0000F4  EC63  F000         	call	_set_oscilators	;wreg free
   327                           
   328                           ;PIC_SETUP.c: 8:     init_pins();
   329  0000F8  EC49  F000         	call	_init_pins	;wreg free
   330                           
   331                           ;PIC_SETUP.c: 9:     init_interrupts();
   332  0000FC  EC85  F000         	call	_init_interrupts	;wreg free
   333                           
   334                           ;PIC_SETUP.c: 10:     INIT_ADC();
   335  000100  EC99  F000         	call	_INIT_ADC	;wreg free
   336                           
   337                           ;PIC_SETUP.c: 11:     SPI1_Initialize();
   338  000104  EC90  F000         	call	_SPI1_Initialize	;wreg free
   339  000108  0012               	return		;funcret
   340  00010A                     __end_of_SETUP:
   341                           	opt callstack 0
   342                           
   343 ;; *************** function _set_oscilators *****************
   344 ;; Defined at:
   345 ;;		line 15 in file "PIC_SETUP.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, status,2
   354 ;; Tracked objects:
   355 ;;		On entry : 0/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMRAM   BANK0   BANK1
   359 ;;      Params:         0       0       0
   360 ;;      Locals:         0       0       0
   361 ;;      Temps:          0       0       0
   362 ;;      Totals:         0       0       0
   363 ;;Total ram usage:        0 bytes
   364 ;; Hardware stack levels used:    1
   365 ;; Hardware stack levels required when called:    2
   366 ;; This function calls:
   367 ;;		Nothing
   368 ;; This function is called by:
   369 ;;		_SETUP
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           	psect	text3
   374  0000C6                     __ptext3:
   375                           	opt callstack 0
   376  0000C6                     _set_oscilators:
   377                           	opt callstack 27
   378                           
   379                           ;PIC_SETUP.c: 20:     OSCCONbits.IRCF = 6;
   380                           
   381                           ;incstack = 0
   382  0000C6  50D3               	movf	4051,w,c	;volatile
   383  0000C8  0B8F               	andlw	-113
   384  0000CA  0960               	iorlw	96
   385  0000CC  6ED3               	movwf	4051,c	;volatile
   386                           
   387                           ;PIC_SETUP.c: 23:     OSCCONbits.SCS = 2;
   388  0000CE  50D3               	movf	4051,w,c	;volatile
   389  0000D0  0BFC               	andlw	-4
   390  0000D2  0902               	iorlw	2
   391  0000D4  6ED3               	movwf	4051,c	;volatile
   392                           
   393                           ;PIC_SETUP.c: 31:     OSCCON2bits.PRISD = 1;
   394  0000D6  84D2               	bsf	4050,2,c	;volatile
   395                           
   396                           ;PIC_SETUP.c: 36:     OSCTUNE = 0x00;
   397  0000D8  0E00               	movlw	0
   398  0000DA  6E9B               	movwf	3995,c	;volatile
   399  0000DC  0012               	return		;funcret
   400  0000DE                     __end_of_set_oscilators:
   401                           	opt callstack 0
   402                           
   403 ;; *************** function _init_pins *****************
   404 ;; Defined at:
   405 ;;		line 39 in file "PIC_SETUP.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1
   419 ;;      Params:         0       0       0
   420 ;;      Locals:         0       0       0
   421 ;;      Temps:          0       0       0
   422 ;;      Totals:         0       0       0
   423 ;;Total ram usage:        0 bytes
   424 ;; Hardware stack levels used:    1
   425 ;; Hardware stack levels required when called:    2
   426 ;; This function calls:
   427 ;;		Nothing
   428 ;; This function is called by:
   429 ;;		_SETUP
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text4
   434  000092                     __ptext4:
   435                           	opt callstack 0
   436  000092                     _init_pins:
   437                           	opt callstack 27
   438                           
   439                           ;PIC_SETUP.c: 41:     LATA, LATB, LATC, LATD = 0x00;
   440                           
   441                           ;incstack = 0
   442  000092  5089               	movf	3977,w,c	;volatile
   443  000094  508A               	movf	3978,w,c	;volatile
   444  000096  508B               	movf	3979,w,c	;volatile
   445  000098  0E00               	movlw	0
   446  00009A  6E8C               	movwf	3980,c	;volatile
   447                           
   448                           ;PIC_SETUP.c: 43:     TRISC3 = 1;
   449  00009C  8694               	bsf	3988,3,c	;volatile
   450                           
   451                           ;PIC_SETUP.c: 44:     TRISC4 = 1;
   452  00009E  8894               	bsf	3988,4,c	;volatile
   453                           
   454                           ;PIC_SETUP.c: 45:     TRISC5 = 0;
   455  0000A0  9A94               	bcf	3988,5,c	;volatile
   456                           
   457                           ;PIC_SETUP.c: 46:     TRISA5 = 1;
   458  0000A2  8A92               	bsf	3986,5,c	;volatile
   459                           
   460                           ;PIC_SETUP.c: 47:     ANSELAbits.ANSA5 = 0;
   461  0000A4  010F               	movlb	15	; () banked
   462  0000A6  9B38               	bcf	56,5,b	;volatile
   463                           
   464                           ; BSR set to: 15
   465                           ;PIC_SETUP.c: 48:     ANSELC = 0x00;
   466  0000A8  0E00               	movlw	0
   467  0000AA  6F3A               	movwf	58,b	;volatile
   468                           
   469                           ; BSR set to: 15
   470                           ;PIC_SETUP.c: 51:     TRISB5 = 1;
   471  0000AC  8A93               	bsf	3987,5,c	;volatile
   472                           
   473                           ; BSR set to: 15
   474                           ;PIC_SETUP.c: 52:     ANSELBbits.ANSB5 = 0;
   475  0000AE  9B39               	bcf	57,5,b	;volatile
   476                           
   477                           ; BSR set to: 15
   478                           ;PIC_SETUP.c: 55:     TRISAbits.RA0 = 1;
   479  0000B0  8092               	bsf	3986,0,c	;volatile
   480                           
   481                           ; BSR set to: 15
   482                           ;PIC_SETUP.c: 56:     ANSELAbits.ANSA0 = 1;;
   483  0000B2  8138               	bsf	56,0,b	;volatile
   484                           
   485                           ; BSR set to: 15
   486                           ;PIC_SETUP.c: 59:     TRISD5 = 0;
   487  0000B4  9A95               	bcf	3989,5,c	;volatile
   488                           
   489                           ; BSR set to: 15
   490                           ;PIC_SETUP.c: 60:     ANSELDbits.ANSD5 = 0;
   491  0000B6  9B3B               	bcf	59,5,b	;volatile
   492                           
   493                           ; BSR set to: 15
   494                           ;PIC_SETUP.c: 63:     TRISC0 = 0;
   495  0000B8  9094               	bcf	3988,0,c	;volatile
   496                           
   497                           ; BSR set to: 15
   498                           ;PIC_SETUP.c: 64:     TRISC1 = 0;
   499  0000BA  9294               	bcf	3988,1,c	;volatile
   500                           
   501                           ; BSR set to: 15
   502                           ;PIC_SETUP.c: 65:     TRISC2 = 0;
   503  0000BC  9494               	bcf	3988,2,c	;volatile
   504                           
   505                           ; BSR set to: 15
   506                           ;PIC_SETUP.c: 66:     LATCbits.LATC0 = 0;
   507  0000BE  908B               	bcf	3979,0,c	;volatile
   508                           
   509                           ; BSR set to: 15
   510                           ;PIC_SETUP.c: 67:     LATCbits.LATC1 = 0;
   511  0000C0  928B               	bcf	3979,1,c	;volatile
   512                           
   513                           ; BSR set to: 15
   514                           ;PIC_SETUP.c: 68:     LATCbits.LATC2 = 0;
   515  0000C2  948B               	bcf	3979,2,c	;volatile
   516                           
   517                           ; BSR set to: 15
   518  0000C4  0012               	return		;funcret
   519  0000C6                     __end_of_init_pins:
   520                           	opt callstack 0
   521                           
   522 ;; *************** function _init_interrupts *****************
   523 ;; Defined at:
   524 ;;		line 71 in file "PIC_SETUP.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		None
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1
   538 ;;      Params:         0       0       0
   539 ;;      Locals:         0       0       0
   540 ;;      Temps:          0       0       0
   541 ;;      Totals:         0       0       0
   542 ;;Total ram usage:        0 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; Hardware stack levels required when called:    2
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_SETUP
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text5
   553  00010A                     __ptext5:
   554                           	opt callstack 0
   555  00010A                     _init_interrupts:
   556                           	opt callstack 27
   557                           
   558                           ;PIC_SETUP.c: 74:     PIR1bits.SSP1IF = 0;
   559                           
   560                           ; BSR set to: 15
   561                           ;incstack = 0
   562  00010A  969E               	bcf	3998,3,c	;volatile
   563                           
   564                           ;PIC_SETUP.c: 75:     PIE1bits.SSP1IE = 1;
   565  00010C  869D               	bsf	3997,3,c	;volatile
   566                           
   567                           ;PIC_SETUP.c: 78:     PIR1bits.ADIF = 0;
   568  00010E  9C9E               	bcf	3998,6,c	;volatile
   569                           
   570                           ;PIC_SETUP.c: 79:     PIE1bits.ADIE = 1;
   571  000110  8C9D               	bsf	3997,6,c	;volatile
   572                           
   573                           ;PIC_SETUP.c: 82:     INTCONbits.RBIF = 0;
   574  000112  90F2               	bcf	4082,0,c	;volatile
   575                           
   576                           ;PIC_SETUP.c: 83:     INTCONbits.RBIE = 1;
   577  000114  86F2               	bsf	4082,3,c	;volatile
   578                           
   579                           ;PIC_SETUP.c: 86:     IOCBbits.IOCB5 = 1;
   580  000116  8A62               	bsf	3938,5,c	;volatile
   581                           
   582                           ;PIC_SETUP.c: 89:     IPEN = 0;
   583  000118  9ED0               	bcf	4048,7,c	;volatile
   584                           
   585                           ;PIC_SETUP.c: 92:     INTCONbits.PEIE =1;
   586  00011A  8CF2               	bsf	4082,6,c	;volatile
   587                           
   588                           ;PIC_SETUP.c: 95:     INTCONbits.GIE = 1;
   589  00011C  8EF2               	bsf	4082,7,c	;volatile
   590  00011E  0012               	return		;funcret
   591  000120                     __end_of_init_interrupts:
   592                           	opt callstack 0
   593                           
   594 ;; *************** function _SPI1_Initialize *****************
   595 ;; Defined at:
   596 ;;		line 6 in file "SPI.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;		None
   599 ;; Auto vars:     Size  Location     Type
   600 ;;		None
   601 ;; Return value:  Size  Location     Type
   602 ;;                  1    wreg      void 
   603 ;; Registers used:
   604 ;;		wreg, status,2
   605 ;; Tracked objects:
   606 ;;		On entry : 0/0
   607 ;;		On exit  : 0/0
   608 ;;		Unchanged: 0/0
   609 ;; Data sizes:     COMRAM   BANK0   BANK1
   610 ;;      Params:         0       0       0
   611 ;;      Locals:         0       0       0
   612 ;;      Temps:          0       0       0
   613 ;;      Totals:         0       0       0
   614 ;;Total ram usage:        0 bytes
   615 ;; Hardware stack levels used:    1
   616 ;; Hardware stack levels required when called:    2
   617 ;; This function calls:
   618 ;;		Nothing
   619 ;; This function is called by:
   620 ;;		_SETUP
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           	psect	text6
   625  000120                     __ptext6:
   626                           	opt callstack 0
   627  000120                     _SPI1_Initialize:
   628                           	opt callstack 27
   629                           
   630                           ;SPI.c: 9:     SSP1STAT = 0x00;
   631                           
   632                           ;incstack = 0
   633  000120  0E00               	movlw	0
   634  000122  6EC7               	movwf	4039,c	;volatile
   635                           
   636                           ;SPI.c: 11:     SSP1CON1 = 0x24;
   637  000124  0E24               	movlw	36
   638  000126  6EC6               	movwf	4038,c	;volatile
   639                           
   640                           ;SPI.c: 14:     SSP1ADD = 0x00;
   641  000128  0E00               	movlw	0
   642  00012A  6EC8               	movwf	4040,c	;volatile
   643                           
   644                           ;SPI.c: 15:     SSP1CON2 = 0x00;
   645  00012C  0E00               	movlw	0
   646  00012E  6EC5               	movwf	4037,c	;volatile
   647  000130  0012               	return		;funcret
   648  000132                     __end_of_SPI1_Initialize:
   649                           	opt callstack 0
   650                           
   651 ;; *************** function _INIT_ADC *****************
   652 ;; Defined at:
   653 ;;		line 4 in file "ADC.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, status,2
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMRAM   BANK0   BANK1
   667 ;;      Params:         0       0       0
   668 ;;      Locals:         0       0       0
   669 ;;      Temps:          0       0       0
   670 ;;      Totals:         0       0       0
   671 ;;Total ram usage:        0 bytes
   672 ;; Hardware stack levels used:    1
   673 ;; Hardware stack levels required when called:    2
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		_SETUP
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           	psect	text7
   682  000132                     __ptext7:
   683                           	opt callstack 0
   684  000132                     _INIT_ADC:
   685                           	opt callstack 27
   686                           
   687                           ;ADC.c: 11:     ADCON0 = 0x01;
   688                           
   689                           ;incstack = 0
   690  000132  0E01               	movlw	1
   691  000134  6EC2               	movwf	4034,c	;volatile
   692                           
   693                           ;ADC.c: 12:     ADCON2 = 0x87;
   694  000136  0E87               	movlw	135
   695  000138  6EC0               	movwf	4032,c	;volatile
   696  00013A  0012               	return		;funcret
   697  00013C                     __end_of_INIT_ADC:
   698                           	opt callstack 0
   699                           
   700 ;; *************** function _ISR *****************
   701 ;; Defined at:
   702 ;;		line 5 in file "Interrupt_Service_Routine.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;		None
   705 ;; Auto vars:     Size  Location     Type
   706 ;;		None
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMRAM   BANK0   BANK1
   716 ;;      Params:         0       0       0
   717 ;;      Locals:         0       0       0
   718 ;;      Temps:          0       0       0
   719 ;;      Totals:         0       0       0
   720 ;;Total ram usage:        0 bytes
   721 ;; Hardware stack levels used:    1
   722 ;; Hardware stack levels required when called:    1
   723 ;; This function calls:
   724 ;;		_WAIT_ADC
   725 ;; This function is called by:
   726 ;;		Interrupt level 2
   727 ;; This function uses a non-reentrant model
   728 ;;
   729                           
   730                           	psect	intcode
   731  000008                     __pintcode:
   732                           	opt callstack 0
   733  000008                     _ISR:
   734                           	opt callstack 27
   735                           
   736                           ;incstack = 0
   737  000008  8208               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   738                           
   739                           ;Interrupt_Service_Routine.c: 8:     if(PIR1bits.SSP1IF == 1)
   740  00000A  A69E               	btfss	3998,3,c	;volatile
   741  00000C  D00A               	goto	i2l213
   742                           
   743                           ;Interrupt_Service_Routine.c: 9:     {;Interrupt_Service_Routine.c: 10:         LATC2 = 
      +                          !LATC2;
   744  00000E  B48B               	btfsc	3979,2,c	;volatile
   745  000010  D002               	goto	i2u8_40
   746  000012  848B               	bsf	3979,2,c	;volatile
   747  000014  D001               	goto	i2u9_45
   748  000016                     i2u8_40:
   749  000016  948B               	bcf	3979,2,c	;volatile
   750  000018                     i2u9_45:
   751                           
   752                           ;Interrupt_Service_Routine.c: 11:         if(SSP1CON1bits.WCOL) SSP1CON1bits.WCOL = 0;
   753  000018  BEC6               	btfsc	4038,7,c	;volatile
   754  00001A  9EC6               	bcf	4038,7,c	;volatile
   755                           
   756                           ;Interrupt_Service_Routine.c: 12:         recived = SSP1BUF;
   757  00001C  CFC9 F006          	movff	4041,_recived	;volatile
   758                           
   759                           ;Interrupt_Service_Routine.c: 14:         PIR1bits.SSP1IF = 0;
   760  000020  969E               	bcf	3998,3,c	;volatile
   761  000022                     i2l213:
   762                           
   763                           ;Interrupt_Service_Routine.c: 19:     if(PIR1bits.ADIF == 1)
   764  000022  AC9E               	btfss	3998,6,c	;volatile
   765  000024  D00B               	goto	i2l993
   766                           
   767                           ;Interrupt_Service_Routine.c: 20:     {;Interrupt_Service_Routine.c: 21:         LATC0 =
      +                           !LATC0;
   768  000026  B08B               	btfsc	3979,0,c	;volatile
   769  000028  D002               	goto	i2u12_40
   770  00002A  808B               	bsf	3979,0,c	;volatile
   771  00002C  D001               	goto	i2u13_45
   772  00002E                     i2u12_40:
   773  00002E  908B               	bcf	3979,0,c	;volatile
   774  000030                     i2u13_45:
   775                           
   776                           ;Interrupt_Service_Routine.c: 23:         WAIT_ADC();
   777  000030  EC9E  F000         	call	_WAIT_ADC	;wreg free
   778                           
   779                           ;Interrupt_Service_Routine.c: 24:         ADC_VALUE = ADRESL;
   780  000034  CFC3 F001          	movff	4035,_ADC_VALUE	;volatile
   781  000038  6A02               	clrf	_ADC_VALUE+1,c
   782                           
   783                           ;Interrupt_Service_Routine.c: 26:         PIR1bits.ADIF = 0;
   784  00003A  9C9E               	bcf	3998,6,c	;volatile
   785  00003C                     i2l993:
   786                           
   787                           ;Interrupt_Service_Routine.c: 31:     if(INTCONbits.RBIF == 1)
   788  00003C  A0F2               	btfss	4082,0,c	;volatile
   789  00003E  D00A               	goto	i2l217
   790                           
   791                           ;Interrupt_Service_Routine.c: 32:     {;Interrupt_Service_Routine.c: 33:         LATC1 =
      +                           !LATC1;
   792  000040  B28B               	btfsc	3979,1,c	;volatile
   793  000042  D002               	goto	i2u15_40
   794  000044  828B               	bsf	3979,1,c	;volatile
   795  000046  D001               	goto	i2u16_45
   796  000048                     i2u15_40:
   797  000048  928B               	bcf	3979,1,c	;volatile
   798  00004A                     i2u16_45:
   799                           
   800                           ;Interrupt_Service_Routine.c: 34:         digital_value = PORTBbits.RB5;
   801  00004A  0E00               	movlw	0
   802  00004C  BA81               	btfsc	3969,5,c	;volatile
   803  00004E  0E01               	movlw	1
   804  000050  6E07               	movwf	_digital_value,c
   805                           
   806                           ;Interrupt_Service_Routine.c: 36:         INTCONbits.RBIF = 0;
   807  000052  90F2               	bcf	4082,0,c	;volatile
   808  000054                     i2l217:
   809  000054  9208               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   810  000056  0011               	retfie		f
   811  000058                     __end_of_ISR:
   812                           	opt callstack 0
   813                           
   814 ;; *************** function _WAIT_ADC *****************
   815 ;; Defined at:
   816 ;;		line 24 in file "ADC.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		None
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1
   830 ;;      Params:         0       0       0
   831 ;;      Locals:         0       0       0
   832 ;;      Temps:          0       0       0
   833 ;;      Totals:         0       0       0
   834 ;;Total ram usage:        0 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_ISR
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text9
   844  00013C                     __ptext9:
   845                           	opt callstack 0
   846  00013C                     _WAIT_ADC:
   847                           	opt callstack 27
   848                           
   849                           ;ADC.c: 26:     while(ADCON0bits.GO==1);
   850                           
   851                           ;incstack = 0
   852  00013C  A2C2               	btfss	4034,1,c	;volatile
   853  00013E  0012               	return	
   854  000140  D7FD               	goto	_WAIT_ADC
   855  000142                     __end_of_WAIT_ADC:
   856                           	opt callstack 0
   857  0000                     
   858                           	psect	rparam
   859  0000                     
   860                           	psect	temp
   861  000008                     btemp:
   862                           	opt callstack 0
   863  000008                     	ds	1
   864  0000                     int$flags	set	btemp
   865  0000                     wtemp8	set	btemp+1
   866  0000                     ttemp5	set	btemp+1
   867  0000                     ttemp6	set	btemp+4
   868  0000                     ttemp7	set	btemp+8
   869                           tosu	equ	0xFFF
   870                           tosh	equ	0xFFE
   871                           tosl	equ	0xFFD
   872                           stkptr	equ	0xFFC
   873                           pclatu	equ	0xFFB
   874                           pclath	equ	0xFFA
   875                           pcl	equ	0xFF9
   876                           tblptru	equ	0xFF8
   877                           tblptrh	equ	0xFF7
   878                           tblptrl	equ	0xFF6
   879                           tablat	equ	0xFF5
   880                           prodh	equ	0xFF4
   881                           prodl	equ	0xFF3
   882                           indf0	equ	0xFEF
   883                           postinc0	equ	0xFEE
   884                           postdec0	equ	0xFED
   885                           preinc0	equ	0xFEC
   886                           plusw0	equ	0xFEB
   887                           fsr0h	equ	0xFEA
   888                           fsr0l	equ	0xFE9
   889                           wreg	equ	0xFE8
   890                           indf1	equ	0xFE7
   891                           postinc1	equ	0xFE6
   892                           postdec1	equ	0xFE5
   893                           preinc1	equ	0xFE4
   894                           plusw1	equ	0xFE3
   895                           fsr1h	equ	0xFE2
   896                           fsr1l	equ	0xFE1
   897                           bsr	equ	0xFE0
   898                           indf2	equ	0xFDF
   899                           postinc2	equ	0xFDE
   900                           postdec2	equ	0xFDD
   901                           preinc2	equ	0xFDC
   902                           plusw2	equ	0xFDB
   903                           fsr2h	equ	0xFDA
   904                           fsr2l	equ	0xFD9
   905                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       7
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _SETUP
                          _START_ADC
 ---------------------------------------------------------------------------------
 (1) _START_ADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
                           _INIT_ADC
                    _SPI1_Initialize
                    _init_interrupts
                          _init_pins
                     _set_oscilators
 ---------------------------------------------------------------------------------
 (2) _set_oscilators                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pins                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
                           _WAIT_ADC
 ---------------------------------------------------------------------------------
 (4) _WAIT_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SETUP
     _INIT_ADC
     _SPI1_Initialize
     _init_interrupts
     _init_pins
     _set_oscilators
   _START_ADC

 _ISR (ROOT)
   _WAIT_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       7       1        7.4%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       7       6        0.0%
DATA                 0      0       7       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Jan  7 00:46:44 2020

            __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000               __CFG_LVP$ON 000000  
                     l971 0088                       l963 006E                       l973 008C  
                     l957 0060                       l967 007A         ??_init_interrupts 0000  
            __CFG_CPB$OFF 000000              __CFG_CPD$OFF 000000                       _ISR 0008  
                     _msg 0005                       wreg 000FE8                      ?_ISR 0000  
                    _LATA 000F89                      _LATB 000F8A                      _LATC 000F8B  
                    _LATD 000F8C                      _IPEN 007E87                      _main 005C  
                    btemp 0008             __CFG_BORV$190 000000                      start 0058  
           __CFG_IESO$OFF 000000              ___param_bank 000000                     ??_ISR 0000  
        __end_of_INIT_ADC 013C                     ?_main 0000                     _LATC0 007C58  
                   _LATC1 007C59                     _LATC2 007C5A            __CFG_DEBUG$OFF 000000  
                   i2l213 0022                     i2l217 0054                     i2l993 003C  
                   _SETUP 00F4             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
        __end_of_WAIT_ADC 0142            __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000  
          __CFG_EBTR1$OFF 000000             __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000  
           __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000        __size_of_START_ADC 0004  
      __CFG_MCLRE$EXTMCLR 000000                     ttemp5 0009                     ttemp6 000C  
                   ttemp7 0010                     status 000FD8                     wtemp8 0009  
          __CFG_HFOFST$ON 000000  __size_of_SPI1_Initialize 0012            __CFG_PBADEN$ON 000000  
         __initialization 00DE              __end_of_main 0092                    ??_main 0000  
           __activetblptr 000000                    ?_SETUP 0000                    _ADCON0 000FC2  
                  _ADCON2 000FC0                    _ADRESL 000FC3                    _ANSELC 000F3A  
          __CFG_WDTEN$OFF 000000                    i2u8_40 0016                    _TRISC0 007CA0  
                  _TRISA5 007C95                    _TRISC1 007CA1                    _TRISC2 007CA2  
                  _TRISC3 007CA3                    _TRISB5 007C9D                    _TRISC4 007CA4  
                  _TRISC5 007CA5                    i2u9_45 0018                    _TRISD5 007CAD  
          __CFG_XINST$OFF 000000            __CFG_STVREN$ON 000000         __end_of_START_ADC 0146  
                  clear_0 00E4                __accesstop 0060   __end_of__initialization 00EA  
               ?_INIT_ADC 0000             ___rparam_used 000001             __end_of_SETUP 010A  
         _init_interrupts 010A            __pcstackCOMRAM 0000                 ?_WAIT_ADC 0000  
       ??_SPI1_Initialize 0000                   ??_SETUP 0000           __CFG_PLLCFG$OFF 000000  
              ??_INIT_ADC 0000        __size_of_init_pins 0034        __CFG_CCP2MX$PORTC1 000000  
              ??_WAIT_ADC 0000   __size_of_set_oscilators 0018        __CFG_CCP3MX$PORTB5 000000  
                 i2u12_40 002E                   i2u13_45 0030                   i2u15_40 0048  
                 i2u16_45 004A                   _OSCTUNE 000F9B                   _SSP1ADD 000FC8  
                 _SSP1BUF 000FC9   __end_of_init_interrupts 0120                 _ADC_VALUE 0001  
               _ADC_Value 0003           __CFG_PWRTEN$OFF 000000                   __Hparam 0000  
                 __Lparam 0000                   __pcinit 00DE                   __ramtop 0200  
                 __ptext0 005C                   __ptext1 0142                   __ptext2 00F4  
                 __ptext3 00C6                   __ptext4 0092                   __ptext5 010A  
                 __ptext6 0120                   __ptext7 0132                   __ptext9 013C  
            __size_of_ISR 0050         __end_of_init_pins 00C6                   _recived 0006  
    end_of_initialization 00EA                   postinc0 000FEE                 _PORTBbits 000F81  
               _START_ADC 0142                 _TRISAbits 000F92          ?_init_interrupts 0000  
         _SPI1_Initialize 0120         __size_of_INIT_ADC 000A            _set_oscilators 00C6  
       __size_of_WAIT_ADC 0006                ?_START_ADC 0000       start_initialization 00DE  
             __end_of_ISR 0058    __end_of_set_oscilators 00DE               __pbssCOMRAM 0001  
 __end_of_SPI1_Initialize 0132           ?_set_oscilators 0000                 __pintcode 0008  
        __CFG_PRICLKEN$ON 000000               ??_START_ADC 0000            __size_of_SETUP 0016  
               _init_pins 0092                  _IOCBbits 000F62                  _LATCbits 000F8B  
                _INIT_ADC 0132                  _PIE1bits 000F9D                  _PIR1bits 000F9E  
        __CFG_WDTPS$32768 000000                  _WAIT_ADC 013C                  _SSP1CON1 000FC6  
                _SSP1CON2 000FC5             _digital_value 0007                  _SSP1STAT 000FC7  
              _ADCON0bits 000FC2          ?_SPI1_Initialize 0000                ?_init_pins 0000  
                __Hrparam 0000                  __Lrparam 0000        __CFG_BOREN$SBORDIS 000000  
       __CFG_P2BMX$PORTD2 000000                _ANSELAbits 000F38                _ANSELBbits 000F39  
              _ANSELDbits 000F3B              _SSP1CON1bits 000FC6               _OSCCON2bits 000FD2  
           __size_of_main 0036  __size_of_init_interrupts 0016                  int$flags 0008  
              _INTCONbits 000FF2               ??_init_pins 0000                  intlevel2 0000  
        ??_set_oscilators 0000                _OSCCONbits 000FD3         __CFG_T3CMX$PORTC0 000000  
       __CFG_FOSC$INTIO67 000000  
