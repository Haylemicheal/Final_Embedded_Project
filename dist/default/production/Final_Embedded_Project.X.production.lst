

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Jan  7 00:20:16 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F43K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21  0000                     
    22                           ; Version 2.05
    23                           ; Generated 20/12/2018 GMT
    24                           ; 
    25                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F43K22 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     _ANSELA	set	3896
    57  0000                     _ANSELDbits	set	3899
    58  0000                     _ANSELBbits	set	3897
    59  0000                     _ANSELC	set	3898
    60  0000                     _ANSELAbits	set	3896
    61  0000                     _PORTBbits	set	3969
    62  0000                     _ADRESH	set	4036
    63  0000                     _ADCON0bits	set	4034
    64  0000                     _ADCON1	set	4033
    65  0000                     _ADCON2bits	set	4032
    66  0000                     _SSP1CON1bits	set	4038
    67  0000                     _SSP1BUF	set	4041
    68  0000                     _SSP1CON2	set	4037
    69  0000                     _SSP1ADD	set	4040
    70  0000                     _SSP1CON1	set	4038
    71  0000                     _SSP1STAT	set	4039
    72  0000                     _IOCBbits	set	3938
    73  0000                     _INTCONbits	set	4082
    74  0000                     _PIE1bits	set	3997
    75  0000                     _PIR1bits	set	3998
    76  0000                     _LATD	set	3980
    77  0000                     _LATC	set	3979
    78  0000                     _LATB	set	3978
    79  0000                     _LATA	set	3977
    80  0000                     _OSCTUNE	set	3995
    81  0000                     _OSCCON2bits	set	4050
    82  0000                     _OSCCONbits	set	4051
    83  0000                     _LATC1	set	31833
    84  0000                     _LATC0	set	31832
    85  0000                     _IPEN	set	32391
    86  0000                     _TRISC1	set	31905
    87  0000                     _TRISC0	set	31904
    88  0000                     _TRISD5	set	31917
    89  0000                     _TRISA0	set	31888
    90  0000                     _TRISB5	set	31901
    91  0000                     _TRISA5	set	31893
    92  0000                     _TRISC5	set	31909
    93  0000                     _TRISC4	set	31908
    94  0000                     _TRISC3	set	31907
    95                           
    96                           ; #config settings
    97  0000                     
    98                           	psect	cinit
    99  0000D2                     __pcinit:
   100                           	opt callstack 0
   101  0000D2                     start_initialization:
   102                           	opt callstack 0
   103  0000D2                     __initialization:
   104                           	opt callstack 0
   105                           
   106                           ; Clear objects allocated to COMRAM (5 bytes)
   107  0000D2  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
   108  0000D4  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
   109  0000D6  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
   110  0000D8  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
   111  0000DA  6A01               	clrf	__pbssCOMRAM& (0+255),c
   112  0000DC                     end_of_initialization:
   113                           	opt callstack 0
   114  0000DC                     __end_of__initialization:
   115                           	opt callstack 0
   116  0000DC  9009               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   117  0000DE  9209               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   118  0000E0  0100               	movlb	0
   119  0000E2  EF20  F000         	goto	_main	;jump to C main() function
   120                           
   121                           	psect	bssCOMRAM
   122  000001                     __pbssCOMRAM:
   123                           	opt callstack 0
   124  000001                     _ADC_VALUE:
   125                           	opt callstack 0
   126  000001                     	ds	2
   127  000003                     _ADC_Value:
   128                           	opt callstack 0
   129  000003                     	ds	2
   130  000005                     _digital_value:
   131                           	opt callstack 0
   132  000005                     	ds	1
   133                           
   134                           	psect	cstackCOMRAM
   135  000006                     __pcstackCOMRAM:
   136                           	opt callstack 0
   137  000006                     SPI1_ExchangeByte@data:
   138                           	opt callstack 0
   139                           
   140                           ; 1 bytes @ 0x0
   141  000006                     	ds	1
   142  000007                     main@msg:
   143                           	opt callstack 0
   144                           
   145                           ; 1 bytes @ 0x1
   146  000007                     	ds	1
   147  000008                     main@recived:
   148                           	opt callstack 0
   149                           
   150                           ; 1 bytes @ 0x2
   151  000008                     	ds	1
   152                           
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   155 ;;
   156 ;; *************** function _main *****************
   157 ;; Defined at:
   158 ;;		line 11 in file "main.c"
   159 ;; Parameters:    Size  Location     Type
   160 ;;		None
   161 ;; Auto vars:     Size  Location     Type
   162 ;;  recived         1    2[COMRAM] unsigned char 
   163 ;;  msg             1    1[COMRAM] unsigned char 
   164 ;; Return value:  Size  Location     Type
   165 ;;                  1    wreg      void 
   166 ;; Registers used:
   167 ;;		wreg, status,2, status,0, cstack
   168 ;; Tracked objects:
   169 ;;		On entry : 0/0
   170 ;;		On exit  : 0/0
   171 ;;		Unchanged: 0/0
   172 ;; Data sizes:     COMRAM   BANK0   BANK1
   173 ;;      Params:         0       0       0
   174 ;;      Locals:         2       0       0
   175 ;;      Temps:          0       0       0
   176 ;;      Totals:         2       0       0
   177 ;;Total ram usage:        2 bytes
   178 ;; Hardware stack levels required when called:    4
   179 ;; This function calls:
   180 ;;		_SETUP
   181 ;;		_SPI1_ExchangeByte
   182 ;; This function is called by:
   183 ;;		Startup code after reset
   184 ;; This function uses a non-reentrant model
   185 ;;
   186                           
   187                           	psect	text0
   188  000040                     __ptext0:
   189                           	opt callstack 0
   190  000040                     _main:
   191                           	opt callstack 27
   192                           
   193                           ;main.c: 12:     SETUP();
   194                           
   195                           ;incstack = 0
   196  000040  EC7D  F000         	call	_SETUP	;wreg free
   197  000044                     
   198                           ;main.c: 15:     uint8_t msg = 0x00;
   199  000044  0E00               	movlw	0
   200  000046                     L1:
   201  000046  6E07               	movwf	main@msg,c
   202  000048                     l85:
   203                           
   204                           ;main.c: 17:     {;main.c: 18:         recived = SPI1_ExchangeByte(msg);
   205  000048  5007               	movf	main@msg,w,c
   206  00004A  EC73  F000         	call	_SPI1_ExchangeByte
   207  00004E  6E08               	movwf	main@recived,c
   208                           
   209                           ;main.c: 20:         if(recived==0xFF){
   210  000050  2808               	incf	main@recived,w,c
   211  000052  A4D8               	btfss	status,2,c
   212  000054  D005               	goto	l913
   213                           
   214                           ;main.c: 21:             msg = 0x09;
   215  000056  0E09               	movlw	9
   216  000058  6E07               	movwf	main@msg,c
   217                           
   218                           ;main.c: 22:             LATB = 0x03;
   219  00005A  0E03               	movlw	3
   220  00005C  6E8A               	movwf	3978,c	;volatile
   221                           
   222                           ;main.c: 23:         }
   223  00005E  D7F4               	goto	l85
   224  000060                     l913:
   225  000060  0408               	decf	main@recived,w,c
   226  000062  A4D8               	btfss	status,2,c
   227  000064  D002               	goto	l917
   228                           
   229                           ;main.c: 25:             msg = 0x0A;
   230  000066  0E0A               	movlw	10
   231  000068  D7EE               	goto	L1
   232  00006A                     l917:
   233  00006A  0E03               	movlw	3
   234  00006C  1808               	xorwf	main@recived,w,c
   235  00006E  A4D8               	btfss	status,2,c
   236  000070  D7E9               	goto	l905
   237                           
   238                           ;main.c: 28:             msg = 0x0B;
   239  000072  0E0B               	movlw	11
   240  000074  D7E8               	goto	L1
   241  000076                     __end_of_main:
   242                           	opt callstack 0
   243                           
   244 ;; *************** function _SPI1_ExchangeByte *****************
   245 ;; Defined at:
   246 ;;		line 18 in file "SPI.c"
   247 ;; Parameters:    Size  Location     Type
   248 ;;  data            1    wreg     unsigned char 
   249 ;; Auto vars:     Size  Location     Type
   250 ;;  data            1    0[COMRAM] unsigned char 
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      unsigned char 
   253 ;; Registers used:
   254 ;;		wreg, status,2
   255 ;; Tracked objects:
   256 ;;		On entry : 0/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMRAM   BANK0   BANK1
   260 ;;      Params:         0       0       0
   261 ;;      Locals:         1       0       0
   262 ;;      Temps:          0       0       0
   263 ;;      Totals:         1       0       0
   264 ;;Total ram usage:        1 bytes
   265 ;; Hardware stack levels used:    1
   266 ;; Hardware stack levels required when called:    2
   267 ;; This function calls:
   268 ;;		Nothing
   269 ;; This function is called by:
   270 ;;		_main
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274                           	psect	text1
   275  0000E6                     __ptext1:
   276                           	opt callstack 0
   277  0000E6                     _SPI1_ExchangeByte:
   278                           	opt callstack 28
   279                           
   280                           ;incstack = 0
   281                           ;SPI1_ExchangeByte@data stored from wreg
   282  0000E6  6E06               	movwf	SPI1_ExchangeByte@data,c
   283                           
   284                           ;SPI.c: 18: unsigned char SPI1_ExchangeByte(unsigned char data);SPI.c: 19: {;SPI.c: 20: 
      +                              SSP1BUF = data;
   285  0000E8  C006  FFC9         	movff	SPI1_ExchangeByte@data,4041	;volatile
   286  0000EC                     l116:
   287  0000EC  A69E               	btfss	3998,3,c	;volatile
   288  0000EE  D7FE               	goto	l116
   289                           
   290                           ;SPI.c: 22:     PIR1bits.SSP1IF = 0;
   291  0000F0  969E               	bcf	3998,3,c	;volatile
   292                           
   293                           ;SPI.c: 23:     if(SSP1CON1bits.WCOL) SSP1CON1bits.WCOL = 0;
   294  0000F2  BEC6               	btfsc	4038,7,c	;volatile
   295  0000F4  9EC6               	bcf	4038,7,c	;volatile
   296                           
   297                           ;SPI.c: 24:     return SSP1BUF;
   298  0000F6  50C9               	movf	4041,w,c	;volatile
   299  0000F8  0012               	return		;funcret
   300  0000FA                     __end_of_SPI1_ExchangeByte:
   301                           	opt callstack 0
   302                           
   303 ;; *************** function _SETUP *****************
   304 ;; Defined at:
   305 ;;		line 5 in file "PIC_SETUP.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;		None
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg, status,2, cstack
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMRAM   BANK0   BANK1
   319 ;;      Params:         0       0       0
   320 ;;      Locals:         0       0       0
   321 ;;      Temps:          0       0       0
   322 ;;      Totals:         0       0       0
   323 ;;Total ram usage:        0 bytes
   324 ;; Hardware stack levels used:    1
   325 ;; Hardware stack levels required when called:    3
   326 ;; This function calls:
   327 ;;		_INIT_ADC
   328 ;;		_SPI1_Initialize
   329 ;;		_init_pins
   330 ;;		_set_oscilators
   331 ;; This function is called by:
   332 ;;		_main
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           	psect	text2
   337  0000FA                     __ptext2:
   338                           	opt callstack 0
   339  0000FA                     _SETUP:
   340                           	opt callstack 27
   341                           
   342                           ;PIC_SETUP.c: 7:     set_oscilators();
   343                           
   344                           ;incstack = 0
   345  0000FA  EC51  F000         	call	_set_oscilators	;wreg free
   346                           
   347                           ;PIC_SETUP.c: 8:     init_pins();
   348  0000FE  EC3B  F000         	call	_init_pins	;wreg free
   349                           
   350                           ;PIC_SETUP.c: 10:     INIT_ADC();
   351  000102  EC5D  F000         	call	_INIT_ADC	;wreg free
   352                           
   353                           ;PIC_SETUP.c: 11:     SPI1_Initialize();
   354  000106  EC86  F000         	call	_SPI1_Initialize	;wreg free
   355  00010A  0012               	return		;funcret
   356  00010C                     __end_of_SETUP:
   357                           	opt callstack 0
   358                           
   359 ;; *************** function _set_oscilators *****************
   360 ;; Defined at:
   361 ;;		line 15 in file "PIC_SETUP.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, status,2
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMRAM   BANK0   BANK1
   375 ;;      Params:         0       0       0
   376 ;;      Locals:         0       0       0
   377 ;;      Temps:          0       0       0
   378 ;;      Totals:         0       0       0
   379 ;;Total ram usage:        0 bytes
   380 ;; Hardware stack levels used:    1
   381 ;; Hardware stack levels required when called:    2
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		_SETUP
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           	psect	text3
   390  0000A2                     __ptext3:
   391                           	opt callstack 0
   392  0000A2                     _set_oscilators:
   393                           	opt callstack 27
   394                           
   395                           ;PIC_SETUP.c: 20:     OSCCONbits.IRCF = 6;
   396                           
   397                           ;incstack = 0
   398  0000A2  50D3               	movf	4051,w,c	;volatile
   399  0000A4  0B8F               	andlw	-113
   400  0000A6  0960               	iorlw	96
   401  0000A8  6ED3               	movwf	4051,c	;volatile
   402                           
   403                           ;PIC_SETUP.c: 23:     OSCCONbits.SCS = 2;
   404  0000AA  50D3               	movf	4051,w,c	;volatile
   405  0000AC  0BFC               	andlw	-4
   406  0000AE  0902               	iorlw	2
   407  0000B0  6ED3               	movwf	4051,c	;volatile
   408                           
   409                           ;PIC_SETUP.c: 31:     OSCCON2bits.PRISD = 1;
   410  0000B2  84D2               	bsf	4050,2,c	;volatile
   411                           
   412                           ;PIC_SETUP.c: 36:     OSCTUNE = 0x00;
   413  0000B4  0E00               	movlw	0
   414  0000B6  6E9B               	movwf	3995,c	;volatile
   415  0000B8  0012               	return		;funcret
   416  0000BA                     __end_of_set_oscilators:
   417                           	opt callstack 0
   418                           
   419 ;; *************** function _init_pins *****************
   420 ;; Defined at:
   421 ;;		line 39 in file "PIC_SETUP.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;		None
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, status,2
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMRAM   BANK0   BANK1
   435 ;;      Params:         0       0       0
   436 ;;      Locals:         0       0       0
   437 ;;      Temps:          0       0       0
   438 ;;      Totals:         0       0       0
   439 ;;Total ram usage:        0 bytes
   440 ;; Hardware stack levels used:    1
   441 ;; Hardware stack levels required when called:    2
   442 ;; This function calls:
   443 ;;		Nothing
   444 ;; This function is called by:
   445 ;;		_SETUP
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           	psect	text4
   450  000076                     __ptext4:
   451                           	opt callstack 0
   452  000076                     _init_pins:
   453                           	opt callstack 27
   454                           
   455                           ;PIC_SETUP.c: 41:     LATA, LATB, LATC, LATD = 0x00;
   456                           
   457                           ;incstack = 0
   458  000076  5089               	movf	3977,w,c	;volatile
   459  000078  508A               	movf	3978,w,c	;volatile
   460  00007A  508B               	movf	3979,w,c	;volatile
   461  00007C  0E00               	movlw	0
   462  00007E  6E8C               	movwf	3980,c	;volatile
   463                           
   464                           ;PIC_SETUP.c: 43:     TRISC3 = 1;
   465  000080  8694               	bsf	3988,3,c	;volatile
   466                           
   467                           ;PIC_SETUP.c: 44:     TRISC4 = 1;
   468  000082  8894               	bsf	3988,4,c	;volatile
   469                           
   470                           ;PIC_SETUP.c: 45:     TRISC5 = 0;
   471  000084  9A94               	bcf	3988,5,c	;volatile
   472                           
   473                           ;PIC_SETUP.c: 46:     TRISA5 = 1;
   474  000086  8A92               	bsf	3986,5,c	;volatile
   475                           
   476                           ;PIC_SETUP.c: 47:     ANSELAbits.ANSA5 = 0;
   477  000088  010F               	movlb	15	; () banked
   478  00008A  9B38               	bcf	56,5,b	;volatile
   479                           
   480                           ; BSR set to: 15
   481                           ;PIC_SETUP.c: 48:     ANSELC = 0x00;
   482  00008C  0E00               	movlw	0
   483  00008E  6F3A               	movwf	58,b	;volatile
   484                           
   485                           ; BSR set to: 15
   486                           ;PIC_SETUP.c: 51:     TRISB5 = 1;
   487  000090  8A93               	bsf	3987,5,c	;volatile
   488                           
   489                           ; BSR set to: 15
   490                           ;PIC_SETUP.c: 52:     ANSELBbits.ANSB5 = 0;
   491  000092  9B39               	bcf	57,5,b	;volatile
   492                           
   493                           ; BSR set to: 15
   494                           ;PIC_SETUP.c: 55:     TRISA0 = 1;
   495  000094  8092               	bsf	3986,0,c	;volatile
   496                           
   497                           ; BSR set to: 15
   498                           ;PIC_SETUP.c: 56:     ANSELAbits.ANSA0 = 1;;
   499  000096  8138               	bsf	56,0,b	;volatile
   500                           
   501                           ; BSR set to: 15
   502                           ;PIC_SETUP.c: 59:     TRISD5 = 0;
   503  000098  9A95               	bcf	3989,5,c	;volatile
   504                           
   505                           ; BSR set to: 15
   506                           ;PIC_SETUP.c: 60:     ANSELDbits.ANSD5 = 0;
   507  00009A  9B3B               	bcf	59,5,b	;volatile
   508                           
   509                           ; BSR set to: 15
   510                           ;PIC_SETUP.c: 63:     TRISC0 = 0;
   511  00009C  9094               	bcf	3988,0,c	;volatile
   512                           
   513                           ; BSR set to: 15
   514                           ;PIC_SETUP.c: 64:     TRISC1 = 0;
   515  00009E  9294               	bcf	3988,1,c	;volatile
   516                           
   517                           ; BSR set to: 15
   518  0000A0  0012               	return		;funcret
   519  0000A2                     __end_of_init_pins:
   520                           	opt callstack 0
   521                           
   522 ;; *************** function _SPI1_Initialize *****************
   523 ;; Defined at:
   524 ;;		line 6 in file "SPI.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK0   BANK1
   538 ;;      Params:         0       0       0
   539 ;;      Locals:         0       0       0
   540 ;;      Temps:          0       0       0
   541 ;;      Totals:         0       0       0
   542 ;;Total ram usage:        0 bytes
   543 ;; Hardware stack levels used:    1
   544 ;; Hardware stack levels required when called:    2
   545 ;; This function calls:
   546 ;;		Nothing
   547 ;; This function is called by:
   548 ;;		_SETUP
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text5
   553  00010C                     __ptext5:
   554                           	opt callstack 0
   555  00010C                     _SPI1_Initialize:
   556                           	opt callstack 27
   557                           
   558                           ;SPI.c: 9:     SSP1STAT = 0x00;
   559                           
   560                           ; BSR set to: 15
   561                           ;incstack = 0
   562  00010C  0E00               	movlw	0
   563  00010E  6EC7               	movwf	4039,c	;volatile
   564                           
   565                           ;SPI.c: 11:     SSP1CON1 = 0x24;
   566  000110  0E24               	movlw	36
   567  000112  6EC6               	movwf	4038,c	;volatile
   568                           
   569                           ;SPI.c: 14:     SSP1ADD = 0x00;
   570  000114  0E00               	movlw	0
   571  000116  6EC8               	movwf	4040,c	;volatile
   572                           
   573                           ;SPI.c: 15:     SSP1CON2 = 0x00;
   574  000118  0E00               	movlw	0
   575  00011A  6EC5               	movwf	4037,c	;volatile
   576  00011C  0012               	return		;funcret
   577  00011E                     __end_of_SPI1_Initialize:
   578                           	opt callstack 0
   579                           
   580 ;; *************** function _INIT_ADC *****************
   581 ;; Defined at:
   582 ;;		line 4 in file "ADC.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1
   596 ;;      Params:         0       0       0
   597 ;;      Locals:         0       0       0
   598 ;;      Temps:          0       0       0
   599 ;;      Totals:         0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels used:    1
   602 ;; Hardware stack levels required when called:    2
   603 ;; This function calls:
   604 ;;		Nothing
   605 ;; This function is called by:
   606 ;;		_SETUP
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text6
   611  0000BA                     __ptext6:
   612                           	opt callstack 0
   613  0000BA                     _INIT_ADC:
   614                           	opt callstack 27
   615                           
   616                           ;ADC.c: 6:     ANSELA = 0x01;
   617                           
   618                           ;incstack = 0
   619  0000BA  0E01               	movlw	1
   620  0000BC  010F               	movlb	15	; () banked
   621  0000BE  6F38               	movwf	56,b	;volatile
   622                           
   623                           ; BSR set to: 15
   624                           ;ADC.c: 8:     ADCON2bits.ADFM = 0;
   625  0000C0  9EC0               	bcf	4032,7,c	;volatile
   626                           
   627                           ;ADC.c: 9:     ADCON2bits.ACQT = 0b000;
   628  0000C2  0EC7               	movlw	-57
   629  0000C4  16C0               	andwf	4032,f,c	;volatile
   630                           
   631                           ;ADC.c: 10:     ADCON2bits.ADCS = 0b111;
   632  0000C6  0E07               	movlw	7
   633  0000C8  12C0               	iorwf	4032,f,c	;volatile
   634                           
   635                           ;ADC.c: 11:     ADCON1 = 0x00;
   636  0000CA  0E00               	movlw	0
   637  0000CC  6EC1               	movwf	4033,c	;volatile
   638                           
   639                           ; BSR set to: 15
   640                           ;ADC.c: 12:     ADCON0bits.ADON = 1;
   641  0000CE  80C2               	bsf	4034,0,c	;volatile
   642                           
   643                           ; BSR set to: 15
   644  0000D0  0012               	return		;funcret
   645  0000D2                     __end_of_INIT_ADC:
   646                           	opt callstack 0
   647                           
   648 ;; *************** function _ISR *****************
   649 ;; Defined at:
   650 ;;		line 5 in file "Interrupt_Service_Routine.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMRAM   BANK0   BANK1
   664 ;;      Params:         0       0       0
   665 ;;      Locals:         0       0       0
   666 ;;      Temps:          0       0       0
   667 ;;      Totals:         0       0       0
   668 ;;Total ram usage:        0 bytes
   669 ;; Hardware stack levels used:    1
   670 ;; Hardware stack levels required when called:    1
   671 ;; This function calls:
   672 ;;		_START_ADC
   673 ;;		_WAIT_ADC
   674 ;; This function is called by:
   675 ;;		Interrupt level 2
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           	psect	intcode
   680  000008                     __pintcode:
   681                           	opt callstack 0
   682  000008                     _ISR:
   683                           	opt callstack 27
   684                           
   685                           ; BSR set to: 15
   686                           ;incstack = 0
   687  000008  8209               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   688                           
   689                           ;Interrupt_Service_Routine.c: 16:     if(PIR1bits.ADIF == 1)
   690  00000A  AC9E               	btfss	3998,6,c	;volatile
   691  00000C  D009               	goto	i2l933
   692                           
   693                           ;Interrupt_Service_Routine.c: 17:     {;Interrupt_Service_Routine.c: 18:         LATC0 =
      +                           1;
   694  00000E  808B               	bsf	3979,0,c	;volatile
   695                           
   696                           ;Interrupt_Service_Routine.c: 19:         START_ADC();
   697  000010  EC92  F000         	call	_START_ADC	;wreg free
   698                           
   699                           ;Interrupt_Service_Routine.c: 20:         WAIT_ADC();
   700  000014  EC8F  F000         	call	_WAIT_ADC	;wreg free
   701                           
   702                           ;Interrupt_Service_Routine.c: 21:         ADC_VALUE = ADRESH;
   703  000018  CFC4 F001          	movff	4036,_ADC_VALUE	;volatile
   704  00001C  6A02               	clrf	_ADC_VALUE+1,c
   705                           
   706                           ;Interrupt_Service_Routine.c: 22:         PIR1bits.ADIF = 0;
   707  00001E  9C9E               	bcf	3998,6,c	;volatile
   708  000020                     i2l933:
   709                           
   710                           ;Interrupt_Service_Routine.c: 27:     if(INTCONbits.RBIF == 1)
   711  000020  A0F2               	btfss	4082,0,c	;volatile
   712  000022  D00A               	goto	i2l171
   713                           
   714                           ;Interrupt_Service_Routine.c: 28:     {;Interrupt_Service_Routine.c: 29:         LATC1 =
      +                           !LATC1;
   715  000024  B28B               	btfsc	3979,1,c	;volatile
   716  000026  D002               	goto	i2u9_40
   717  000028  828B               	bsf	3979,1,c	;volatile
   718  00002A  D001               	goto	i2u10_45
   719  00002C                     i2u9_40:
   720  00002C  928B               	bcf	3979,1,c	;volatile
   721  00002E                     i2u10_45:
   722                           
   723                           ;Interrupt_Service_Routine.c: 30:         digital_value = PORTBbits.RB5;
   724  00002E  0E00               	movlw	0
   725  000030  BA81               	btfsc	3969,5,c	;volatile
   726  000032  0E01               	movlw	1
   727  000034  6E05               	movwf	_digital_value,c
   728                           
   729                           ;Interrupt_Service_Routine.c: 31:         INTCONbits.RBIF = 0;
   730  000036  90F2               	bcf	4082,0,c	;volatile
   731  000038                     i2l171:
   732  000038  9209               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   733  00003A  0011               	retfie		f
   734  00003C                     __end_of_ISR:
   735                           	opt callstack 0
   736                           
   737 ;; *************** function _WAIT_ADC *****************
   738 ;; Defined at:
   739 ;;		line 20 in file "ADC.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;		None
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		None
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1
   753 ;;      Params:         0       0       0
   754 ;;      Locals:         0       0       0
   755 ;;      Temps:          0       0       0
   756 ;;      Totals:         0       0       0
   757 ;;Total ram usage:        0 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; This function calls:
   760 ;;		Nothing
   761 ;; This function is called by:
   762 ;;		_ISR
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text8
   767  00011E                     __ptext8:
   768                           	opt callstack 0
   769  00011E                     _WAIT_ADC:
   770                           	opt callstack 27
   771                           
   772                           ;ADC.c: 22:     while(ADCON0bits.GO==1);
   773                           
   774                           ;incstack = 0
   775  00011E  A2C2               	btfss	4034,1,c	;volatile
   776  000120  0012               	return	
   777  000122  D7FD               	goto	_WAIT_ADC
   778  000124                     __end_of_WAIT_ADC:
   779                           	opt callstack 0
   780                           
   781 ;; *************** function _START_ADC *****************
   782 ;; Defined at:
   783 ;;		line 15 in file "ADC.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		None
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1
   797 ;;      Params:         0       0       0
   798 ;;      Locals:         0       0       0
   799 ;;      Temps:          0       0       0
   800 ;;      Totals:         0       0       0
   801 ;;Total ram usage:        0 bytes
   802 ;; Hardware stack levels used:    1
   803 ;; This function calls:
   804 ;;		Nothing
   805 ;; This function is called by:
   806 ;;		_ISR
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text9
   811  000124                     __ptext9:
   812                           	opt callstack 0
   813  000124                     _START_ADC:
   814                           	opt callstack 27
   815                           
   816                           ;ADC.c: 17:     ADCON0bits.GO = 1;
   817                           
   818                           ;incstack = 0
   819  000124  82C2               	bsf	4034,1,c	;volatile
   820  000126  0012               	return		;funcret
   821  000128                     __end_of_START_ADC:
   822                           	opt callstack 0
   823  0000                     
   824                           	psect	rparam
   825  0000                     
   826                           	psect	temp
   827  000009                     btemp:
   828                           	opt callstack 0
   829  000009                     	ds	1
   830  0000                     int$flags	set	btemp
   831  0000                     wtemp8	set	btemp+1
   832  0000                     ttemp5	set	btemp+1
   833  0000                     ttemp6	set	btemp+4
   834  0000                     ttemp7	set	btemp+8
   835                           tosu	equ	0xFFF
   836                           tosh	equ	0xFFE
   837                           tosl	equ	0xFFD
   838                           stkptr	equ	0xFFC
   839                           pclatu	equ	0xFFB
   840                           pclath	equ	0xFFA
   841                           pcl	equ	0xFF9
   842                           tblptru	equ	0xFF8
   843                           tblptrh	equ	0xFF7
   844                           tblptrl	equ	0xFF6
   845                           tablat	equ	0xFF5
   846                           prodh	equ	0xFF4
   847                           prodl	equ	0xFF3
   848                           indf0	equ	0xFEF
   849                           postinc0	equ	0xFEE
   850                           postdec0	equ	0xFED
   851                           preinc0	equ	0xFEC
   852                           plusw0	equ	0xFEB
   853                           fsr0h	equ	0xFEA
   854                           fsr0l	equ	0xFE9
   855                           wreg	equ	0xFE8
   856                           indf1	equ	0xFE7
   857                           postinc1	equ	0xFE6
   858                           postdec1	equ	0xFE5
   859                           preinc1	equ	0xFE4
   860                           plusw1	equ	0xFE3
   861                           fsr1h	equ	0xFE2
   862                           fsr1l	equ	0xFE1
   863                           bsr	equ	0xFE0
   864                           indf2	equ	0xFDF
   865                           postinc2	equ	0xFDE
   866                           postdec2	equ	0xFDD
   867                           preinc2	equ	0xFDC
   868                           plusw2	equ	0xFDB
   869                           fsr2h	equ	0xFDA
   870                           fsr2l	equ	0xFD9
   871                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      3       8
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_SPI1_ExchangeByte

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      75
                                              1 COMRAM     2     2      0
                              _SETUP
                  _SPI1_ExchangeByte
 ---------------------------------------------------------------------------------
 (1) _SPI1_ExchangeByte                                    1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
                           _INIT_ADC
                    _SPI1_Initialize
                          _init_pins
                     _set_oscilators
 ---------------------------------------------------------------------------------
 (2) _set_oscilators                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pins                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
                          _START_ADC
                           _WAIT_ADC
 ---------------------------------------------------------------------------------
 (4) _WAIT_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _START_ADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SETUP
     _INIT_ADC
     _SPI1_Initialize
     _init_pins
     _set_oscilators
   _SPI1_ExchangeByte

 _ISR (ROOT)
   _START_ADC
   _WAIT_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      3       8       1        8.5%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8       6        0.0%
DATA                 0      0       8       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Jan  7 00:20:16 2020

         _SPI1_ExchangeByte 00E6                          l85 0048          ?_SPI1_ExchangeByte 0006  
              __CFG_CP0$OFF 000000                __CFG_CP1$OFF 000000                 __CFG_LVP$ON 000000  
                       l116 00EC                         l913 0060                         l905 0044  
                       l917 006A                __CFG_CPB$OFF 000000                __CFG_CPD$OFF 000000  
                       _ISR 0008         ??_SPI1_ExchangeByte 0006                        ?_ISR 0006  
                      _LATA 000F89                        _LATB 000F8A                        _LATC 000F8B  
                      _LATD 000F8C                        _IPEN 007E87                 main@recived 0008  
                      _main 0040                        btemp 0009               __CFG_BORV$190 000000  
                      start 003C               __CFG_IESO$OFF 000000   __end_of_SPI1_ExchangeByte 00FA  
              ___param_bank 000000                       ??_ISR 0006            __end_of_INIT_ADC 00D2  
                     ?_main 0006                       _LATC0 007C58                       _LATC1 007C59  
            __CFG_DEBUG$OFF 000000                       i2l171 0038                       i2l933 0020  
                     _SETUP 00FA               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
          __end_of_WAIT_ADC 0124              __CFG_EBTR0$OFF 000000              __CFG_FCMEN$OFF 000000  
            __CFG_EBTR1$OFF 000000               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000              __CFG_EBTRB$OFF 000000          __size_of_START_ADC 0004  
        __CFG_MCLRE$EXTMCLR 000000                       ttemp5 000A                       ttemp6 000D  
                     ttemp7 0011                       status 000FD8                       wtemp8 000A  
            __CFG_HFOFST$ON 000000    __size_of_SPI1_Initialize 0012              __CFG_PBADEN$ON 000000  
           __initialization 00D2                __end_of_main 0076                      ??_main 0007  
             __activetblptr 000000                      ?_SETUP 0006                      _ADCON1 000FC1  
                    _ADRESH 000FC4                      _ANSELA 000F38                      _ANSELC 000F3A  
            __CFG_WDTEN$OFF 000000                      _TRISA0 007C90                      _TRISC0 007CA0  
                    _TRISA5 007C95                      _TRISC1 007CA1                      i2u9_40 002C  
                    _TRISC3 007CA3                      _TRISB5 007C9D                      _TRISC4 007CA4  
                    _TRISC5 007CA5                      _TRISD5 007CAD  __size_of_SPI1_ExchangeByte 0014  
            __CFG_XINST$OFF 000000              __CFG_STVREN$ON 000000           __end_of_START_ADC 0128  
                __accesstop 0060     __end_of__initialization 00DC                   ?_INIT_ADC 0006  
             ___rparam_used 000001               __end_of_SETUP 010C              __pcstackCOMRAM 0006  
                 ?_WAIT_ADC 0006           ??_SPI1_Initialize 0006       SPI1_ExchangeByte@data 0006  
                   ??_SETUP 0006             __CFG_PLLCFG$OFF 000000                  ??_INIT_ADC 0006  
        __size_of_init_pins 002C          __CFG_CCP2MX$PORTC1 000000                  ??_WAIT_ADC 0006  
   __size_of_set_oscilators 0018          __CFG_CCP3MX$PORTB5 000000                     i2u10_45 002E  
                   _OSCTUNE 000F9B                     _SSP1ADD 000FC8                     _SSP1BUF 000FC9  
                 _ADC_VALUE 0001                   _ADC_Value 0003             __CFG_PWRTEN$OFF 000000  
                   __Hparam 0000                     __Lparam 0000                     __pcinit 00D2  
                   __ramtop 0200                     __ptext0 0040                     __ptext1 00E6  
                   __ptext2 00FA                     __ptext3 00A2                     __ptext4 0076  
                   __ptext5 010C                     __ptext6 00BA                     __ptext8 011E  
                   __ptext9 0124                __size_of_ISR 0034           __end_of_init_pins 00A2  
                   main@msg 0007        end_of_initialization 00DC                   _PORTBbits 000F81  
                 _START_ADC 0124             _SPI1_Initialize 010C           __size_of_INIT_ADC 0018  
            _set_oscilators 00A2           __size_of_WAIT_ADC 0006                  ?_START_ADC 0006  
       start_initialization 00D2                 __end_of_ISR 003C      __end_of_set_oscilators 00BA  
               __pbssCOMRAM 0001     __end_of_SPI1_Initialize 011E             ?_set_oscilators 0006  
                 __pintcode 0008            __CFG_PRICLKEN$ON 000000                 ??_START_ADC 0006  
            __size_of_SETUP 0012                   _init_pins 0076                    _IOCBbits 000F62  
                  _INIT_ADC 00BA                    _PIE1bits 000F9D                    _PIR1bits 000F9E  
          __CFG_WDTPS$32768 000000                    _WAIT_ADC 011E                    _SSP1CON1 000FC6  
                  _SSP1CON2 000FC5               _digital_value 0005                    _SSP1STAT 000FC7  
                _ADCON0bits 000FC2                  _ADCON2bits 000FC0            ?_SPI1_Initialize 0006  
                ?_init_pins 0006                    __Hrparam 0000                    __Lrparam 0000  
        __CFG_BOREN$SBORDIS 000000           __CFG_P2BMX$PORTD2 000000                  _ANSELAbits 000F38  
                _ANSELBbits 000F39                  _ANSELDbits 000F3B                _SSP1CON1bits 000FC6  
               _OSCCON2bits 000FD2               __size_of_main 0036                    int$flags 0009  
                _INTCONbits 000FF2                 ??_init_pins 0006                    intlevel2 0000  
          ??_set_oscilators 0006                  _OSCCONbits 000FD3           __CFG_T3CMX$PORTC0 000000  
         __CFG_FOSC$INTIO67 000000  
