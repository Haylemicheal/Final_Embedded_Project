

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jan  8 07:18:52 2020

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F43K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           ; Version 2.05
    25                           ; Generated 20/12/2018 GMT
    26                           ; 
    27                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F43K22 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _ANSELDbits	set	3899
    59  0000                     _ANSELBbits	set	3897
    60  0000                     _ANSELC	set	3898
    61  0000                     _ANSELAbits	set	3896
    62  0000                     _SSP1CON2	set	4037
    63  0000                     _SSP1ADD	set	4040
    64  0000                     _SSP1CON1	set	4038
    65  0000                     _SSP1STAT	set	4039
    66  0000                     _IOCBbits	set	3938
    67  0000                     _PIE1bits	set	3997
    68  0000                     _LATCbits	set	3979
    69  0000                     _TRISAbits	set	3986
    70  0000                     _LATD	set	3980
    71  0000                     _LATC	set	3979
    72  0000                     _LATB	set	3978
    73  0000                     _LATA	set	3977
    74  0000                     _OSCTUNE	set	3995
    75  0000                     _OSCCON2bits	set	4050
    76  0000                     _OSCCONbits	set	4051
    77  0000                     _PORTBbits	set	3969
    78  0000                     _INTCONbits	set	4082
    79  0000                     _ADRESL	set	4035
    80  0000                     _SSP1CON1bits	set	4038
    81  0000                     _PIR1bits	set	3998
    82  0000                     _ADCON0bits	set	4034
    83  0000                     _ADCON2	set	4032
    84  0000                     _ADCON0	set	4034
    85  0000                     _SSP1BUF	set	4041
    86  0000                     _LATD5	set	31845
    87  0000                     _IPEN	set	32391
    88  0000                     _TRISC2	set	31906
    89  0000                     _TRISC1	set	31905
    90  0000                     _TRISC0	set	31904
    91  0000                     _TRISD5	set	31917
    92  0000                     _TRISB5	set	31901
    93  0000                     _TRISA5	set	31893
    94  0000                     _TRISC5	set	31909
    95  0000                     _TRISC4	set	31908
    96  0000                     _TRISC3	set	31907
    97  0000                     _LATC1	set	31833
    98  0000                     _LATC0	set	31832
    99  0000                     _LATC2	set	31834
   100                           
   101                           ; #config settings
   102  0000                     
   103                           	psect	cinit
   104  0000FA                     __pcinit:
   105                           	opt callstack 0
   106  0000FA                     start_initialization:
   107                           	opt callstack 0
   108  0000FA                     __initialization:
   109                           	opt callstack 0
   110                           
   111                           ; Clear objects allocated to COMRAM (7 bytes)
   112  0000FA  EE00  F001         	lfsr	0,__pbssCOMRAM
   113  0000FE  0E07               	movlw	7
   114  000100                     clear_0:
   115  000100  6AEE               	clrf	postinc0,c
   116  000102  06E8               	decf	wreg,f,c
   117  000104  E1FD               	bnz	clear_0
   118  000106                     end_of_initialization:
   119                           	opt callstack 0
   120  000106                     __end_of__initialization:
   121                           	opt callstack 0
   122  000106  9008               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   123  000108  9208               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   124  00010A  0100               	movlb	0
   125  00010C  EF2E  F000         	goto	_main	;jump to C main() function
   126                           
   127                           	psect	bssCOMRAM
   128  000001                     __pbssCOMRAM:
   129                           	opt callstack 0
   130  000001                     _ADC_VALUE:
   131                           	opt callstack 0
   132  000001                     	ds	2
   133  000003                     _ADC_Value:
   134                           	opt callstack 0
   135  000003                     	ds	2
   136  000005                     _msg:
   137                           	opt callstack 0
   138  000005                     	ds	1
   139  000006                     _recived:
   140                           	opt callstack 0
   141  000006                     	ds	1
   142  000007                     _digital_value:
   143                           	opt callstack 0
   144  000007                     	ds	1
   145                           
   146                           	psect	cstackCOMRAM
   147  000000                     __pcstackCOMRAM:
   148                           	opt callstack 0
   149  000000                     
   150                           ; 1 bytes @ 0x0
   151 ;;
   152 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   153 ;;
   154 ;; *************** function _main *****************
   155 ;; Defined at:
   156 ;;		line 11 in file "main.c"
   157 ;; Parameters:    Size  Location     Type
   158 ;;		None
   159 ;; Auto vars:     Size  Location     Type
   160 ;;		None
   161 ;; Return value:  Size  Location     Type
   162 ;;                  1    wreg      void 
   163 ;; Registers used:
   164 ;;		wreg, status,2, status,0, cstack
   165 ;; Tracked objects:
   166 ;;		On entry : 0/0
   167 ;;		On exit  : 0/0
   168 ;;		Unchanged: 0/0
   169 ;; Data sizes:     COMRAM   BANK0   BANK1
   170 ;;      Params:         0       0       0
   171 ;;      Locals:         0       0       0
   172 ;;      Temps:          0       0       0
   173 ;;      Totals:         0       0       0
   174 ;;Total ram usage:        0 bytes
   175 ;; Hardware stack levels required when called:    4
   176 ;; This function calls:
   177 ;;		_SETUP
   178 ;;		_START_ADC
   179 ;;		_Turn_OFF
   180 ;;		_Turn_ON
   181 ;; This function is called by:
   182 ;;		Startup code after reset
   183 ;; This function uses a non-reentrant model
   184 ;;
   185                           
   186                           	psect	text0
   187  00005C                     __ptext0:
   188                           	opt callstack 0
   189  00005C                     _main:
   190                           	opt callstack 27
   191                           
   192                           ;main.c: 12:     SETUP();
   193                           
   194                           ;incstack = 0
   195  00005C  EC88  F000         	call	_SETUP	;wreg free
   196  000060                     l956:
   197                           
   198                           ;main.c: 17:     {;main.c: 18:         START_ADC();
   199  000060  ECB3  F000         	call	_START_ADC	;wreg free
   200                           
   201                           ;main.c: 22:         if(recived==0xFF){
   202  000064  2806               	incf	_recived,w,c
   203  000066  A4D8               	btfss	status,2,c
   204  000068  D002               	goto	l962
   205                           
   206                           ;main.c: 23:             msg = 0x09;
   207  00006A  0E09               	movlw	9
   208  00006C  D014               	goto	L1
   209  00006E                     l962:
   210  00006E  0406               	decf	_recived,w,c
   211  000070  A4D8               	btfss	status,2,c
   212  000072  D003               	goto	l966
   213                           
   214                           ;main.c: 27:             msg = ADC_VALUE;
   215  000074  C001  F005         	movff	_ADC_VALUE,_msg
   216                           
   217                           ;main.c: 28:         }
   218  000078  D017               	goto	l984
   219  00007A                     l966:
   220  00007A  0E02               	movlw	2
   221  00007C  1806               	xorwf	_recived,w,c
   222  00007E  A4D8               	btfss	status,2,c
   223  000080  D003               	goto	l970
   224                           
   225                           ;main.c: 30:             msg = digital_value;
   226  000082  C007  F005         	movff	_digital_value,_msg
   227                           
   228                           ;main.c: 31:         }
   229  000086  D010               	goto	l984
   230  000088                     l970:
   231  000088  0E03               	movlw	3
   232  00008A  1806               	xorwf	_recived,w,c
   233  00008C  A4D8               	btfss	status,2,c
   234  00008E  D005               	goto	l976
   235                           
   236                           ;main.c: 33:             Turn_OFF();
   237  000090  ECB1  F000         	call	_Turn_OFF	;wreg free
   238  000094                     l974:
   239                           
   240                           ;main.c: 34:             msg = 0x00;
   241  000094  0E00               	movlw	0
   242  000096                     L1:
   243  000096  6E05               	movwf	_msg,c
   244                           
   245                           ;main.c: 35:         }
   246  000098  D007               	goto	l984
   247  00009A                     l976:
   248  00009A  0E04               	movlw	4
   249  00009C  1806               	xorwf	_recived,w,c
   250  00009E  A4D8               	btfss	status,2,c
   251  0000A0  D7F9               	goto	l974
   252                           
   253                           ;main.c: 37:             Turn_ON();
   254  0000A2  ECAF  F000         	call	_Turn_ON	;wreg free
   255  0000A6  D7F6               	goto	l974
   256  0000A8                     l984:
   257                           
   258                           ;main.c: 43:         SSP1BUF = msg;
   259  0000A8  C005  FFC9         	movff	_msg,4041	;volatile
   260  0000AC  D7D9               	goto	l956
   261  0000AE                     __end_of_main:
   262                           	opt callstack 0
   263                           
   264 ;; *************** function _Turn_ON *****************
   265 ;; Defined at:
   266 ;;		line 3 in file "ACTUATOR.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;		None
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		None
   275 ;; Tracked objects:
   276 ;;		On entry : 0/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMRAM   BANK0   BANK1
   280 ;;      Params:         0       0       0
   281 ;;      Locals:         0       0       0
   282 ;;      Temps:          0       0       0
   283 ;;      Totals:         0       0       0
   284 ;;Total ram usage:        0 bytes
   285 ;; Hardware stack levels used:    1
   286 ;; Hardware stack levels required when called:    2
   287 ;; This function calls:
   288 ;;		Nothing
   289 ;; This function is called by:
   290 ;;		_main
   291 ;; This function uses a non-reentrant model
   292 ;;
   293                           
   294                           	psect	text1
   295  00015E                     __ptext1:
   296                           	opt callstack 0
   297  00015E                     _Turn_ON:
   298                           	opt callstack 28
   299                           
   300                           ;ACTUATOR.c: 5:     LATD5 = 1;
   301                           
   302                           ;incstack = 0
   303  00015E  8A8C               	bsf	3980,5,c	;volatile
   304  000160  0012               	return		;funcret
   305  000162                     __end_of_Turn_ON:
   306                           	opt callstack 0
   307                           
   308 ;; *************** function _Turn_OFF *****************
   309 ;; Defined at:
   310 ;;		line 7 in file "ACTUATOR.c"
   311 ;; Parameters:    Size  Location     Type
   312 ;;		None
   313 ;; Auto vars:     Size  Location     Type
   314 ;;		None
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		None
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1
   324 ;;      Params:         0       0       0
   325 ;;      Locals:         0       0       0
   326 ;;      Temps:          0       0       0
   327 ;;      Totals:         0       0       0
   328 ;;Total ram usage:        0 bytes
   329 ;; Hardware stack levels used:    1
   330 ;; Hardware stack levels required when called:    2
   331 ;; This function calls:
   332 ;;		Nothing
   333 ;; This function is called by:
   334 ;;		_main
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           	psect	text2
   339  000162                     __ptext2:
   340                           	opt callstack 0
   341  000162                     _Turn_OFF:
   342                           	opt callstack 28
   343                           
   344                           ;ACTUATOR.c: 9:     LATD5 = 0;
   345                           
   346                           ;incstack = 0
   347  000162  9A8C               	bcf	3980,5,c	;volatile
   348  000164  0012               	return		;funcret
   349  000166                     __end_of_Turn_OFF:
   350                           	opt callstack 0
   351                           
   352 ;; *************** function _START_ADC *****************
   353 ;; Defined at:
   354 ;;		line 19 in file "ADC.c"
   355 ;; Parameters:    Size  Location     Type
   356 ;;		None
   357 ;; Auto vars:     Size  Location     Type
   358 ;;		None
   359 ;; Return value:  Size  Location     Type
   360 ;;                  1    wreg      void 
   361 ;; Registers used:
   362 ;;		None
   363 ;; Tracked objects:
   364 ;;		On entry : 0/0
   365 ;;		On exit  : 0/0
   366 ;;		Unchanged: 0/0
   367 ;; Data sizes:     COMRAM   BANK0   BANK1
   368 ;;      Params:         0       0       0
   369 ;;      Locals:         0       0       0
   370 ;;      Temps:          0       0       0
   371 ;;      Totals:         0       0       0
   372 ;;Total ram usage:        0 bytes
   373 ;; Hardware stack levels used:    1
   374 ;; Hardware stack levels required when called:    2
   375 ;; This function calls:
   376 ;;		Nothing
   377 ;; This function is called by:
   378 ;;		_main
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           	psect	text3
   383  000166                     __ptext3:
   384                           	opt callstack 0
   385  000166                     _START_ADC:
   386                           	opt callstack 28
   387                           
   388                           ;ADC.c: 21:     ADCON0bits.GO = 1;
   389                           
   390                           ;incstack = 0
   391  000166  82C2               	bsf	4034,1,c	;volatile
   392  000168  0012               	return		;funcret
   393  00016A                     __end_of_START_ADC:
   394                           	opt callstack 0
   395                           
   396 ;; *************** function _SETUP *****************
   397 ;; Defined at:
   398 ;;		line 4 in file "PIC_SETUP.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, status,2, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMRAM   BANK0   BANK1
   412 ;;      Params:         0       0       0
   413 ;;      Locals:         0       0       0
   414 ;;      Temps:          0       0       0
   415 ;;      Totals:         0       0       0
   416 ;;Total ram usage:        0 bytes
   417 ;; Hardware stack levels used:    1
   418 ;; Hardware stack levels required when called:    3
   419 ;; This function calls:
   420 ;;		_INIT_ADC
   421 ;;		_SPI1_Initialize
   422 ;;		_init_interrupts
   423 ;;		_init_pins
   424 ;;		_set_oscilators
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text4
   431  000110                     __ptext4:
   432                           	opt callstack 0
   433  000110                     _SETUP:
   434                           	opt callstack 27
   435                           
   436                           ;PIC_SETUP.c: 6:     set_oscilators();
   437                           
   438                           ;incstack = 0
   439  000110  EC71  F000         	call	_set_oscilators	;wreg free
   440                           
   441                           ;PIC_SETUP.c: 7:     init_pins();
   442  000114  EC57  F000         	call	_init_pins	;wreg free
   443                           
   444                           ;PIC_SETUP.c: 8:     init_interrupts();
   445  000118  EC93  F000         	call	_init_interrupts	;wreg free
   446                           
   447                           ;PIC_SETUP.c: 9:     INIT_ADC();
   448  00011C  ECA7  F000         	call	_INIT_ADC	;wreg free
   449                           
   450                           ;PIC_SETUP.c: 10:     SPI1_Initialize();
   451  000120  EC9E  F000         	call	_SPI1_Initialize	;wreg free
   452  000124  0012               	return		;funcret
   453  000126                     __end_of_SETUP:
   454                           	opt callstack 0
   455                           
   456 ;; *************** function _set_oscilators *****************
   457 ;; Defined at:
   458 ;;		line 14 in file "PIC_SETUP.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg, status,2
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1
   472 ;;      Params:         0       0       0
   473 ;;      Locals:         0       0       0
   474 ;;      Temps:          0       0       0
   475 ;;      Totals:         0       0       0
   476 ;;Total ram usage:        0 bytes
   477 ;; Hardware stack levels used:    1
   478 ;; Hardware stack levels required when called:    2
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		_SETUP
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           	psect	text5
   487  0000E2                     __ptext5:
   488                           	opt callstack 0
   489  0000E2                     _set_oscilators:
   490                           	opt callstack 27
   491                           
   492                           ;PIC_SETUP.c: 19:     OSCCONbits.IRCF = 6;
   493                           
   494                           ;incstack = 0
   495  0000E2  50D3               	movf	4051,w,c	;volatile
   496  0000E4  0B8F               	andlw	-113
   497  0000E6  0960               	iorlw	96
   498  0000E8  6ED3               	movwf	4051,c	;volatile
   499                           
   500                           ;PIC_SETUP.c: 22:     OSCCONbits.SCS = 2;
   501  0000EA  50D3               	movf	4051,w,c	;volatile
   502  0000EC  0BFC               	andlw	-4
   503  0000EE  0902               	iorlw	2
   504  0000F0  6ED3               	movwf	4051,c	;volatile
   505                           
   506                           ;PIC_SETUP.c: 30:     OSCCON2bits.PRISD = 1;
   507  0000F2  84D2               	bsf	4050,2,c	;volatile
   508                           
   509                           ;PIC_SETUP.c: 35:     OSCTUNE = 0x00;
   510  0000F4  0E00               	movlw	0
   511  0000F6  6E9B               	movwf	3995,c	;volatile
   512  0000F8  0012               	return		;funcret
   513  0000FA                     __end_of_set_oscilators:
   514                           	opt callstack 0
   515                           
   516 ;; *************** function _init_pins *****************
   517 ;; Defined at:
   518 ;;		line 38 in file "PIC_SETUP.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;		None
   521 ;; Auto vars:     Size  Location     Type
   522 ;;		None
   523 ;; Return value:  Size  Location     Type
   524 ;;                  1    wreg      void 
   525 ;; Registers used:
   526 ;;		wreg, status,2
   527 ;; Tracked objects:
   528 ;;		On entry : 0/0
   529 ;;		On exit  : 0/0
   530 ;;		Unchanged: 0/0
   531 ;; Data sizes:     COMRAM   BANK0   BANK1
   532 ;;      Params:         0       0       0
   533 ;;      Locals:         0       0       0
   534 ;;      Temps:          0       0       0
   535 ;;      Totals:         0       0       0
   536 ;;Total ram usage:        0 bytes
   537 ;; Hardware stack levels used:    1
   538 ;; Hardware stack levels required when called:    2
   539 ;; This function calls:
   540 ;;		Nothing
   541 ;; This function is called by:
   542 ;;		_SETUP
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text6
   547  0000AE                     __ptext6:
   548                           	opt callstack 0
   549  0000AE                     _init_pins:
   550                           	opt callstack 27
   551                           
   552                           ;PIC_SETUP.c: 40:     LATA, LATB, LATC, LATD = 0x00;
   553                           
   554                           ;incstack = 0
   555  0000AE  5089               	movf	3977,w,c	;volatile
   556  0000B0  508A               	movf	3978,w,c	;volatile
   557  0000B2  508B               	movf	3979,w,c	;volatile
   558  0000B4  0E00               	movlw	0
   559  0000B6  6E8C               	movwf	3980,c	;volatile
   560                           
   561                           ;PIC_SETUP.c: 42:     TRISC3 = 1;
   562  0000B8  8694               	bsf	3988,3,c	;volatile
   563                           
   564                           ;PIC_SETUP.c: 43:     TRISC4 = 1;
   565  0000BA  8894               	bsf	3988,4,c	;volatile
   566                           
   567                           ;PIC_SETUP.c: 44:     TRISC5 = 0;
   568  0000BC  9A94               	bcf	3988,5,c	;volatile
   569                           
   570                           ;PIC_SETUP.c: 45:     TRISA5 = 1;
   571  0000BE  8A92               	bsf	3986,5,c	;volatile
   572                           
   573                           ;PIC_SETUP.c: 46:     ANSELAbits.ANSA5 = 0;
   574  0000C0  010F               	movlb	15	; () banked
   575  0000C2  9B38               	bcf	56,5,b	;volatile
   576                           
   577                           ; BSR set to: 15
   578                           ;PIC_SETUP.c: 47:     ANSELC = 0x00;
   579  0000C4  0E00               	movlw	0
   580  0000C6  6F3A               	movwf	58,b	;volatile
   581                           
   582                           ; BSR set to: 15
   583                           ;PIC_SETUP.c: 50:     TRISB5 = 1;
   584  0000C8  8A93               	bsf	3987,5,c	;volatile
   585                           
   586                           ; BSR set to: 15
   587                           ;PIC_SETUP.c: 51:     ANSELBbits.ANSB5 = 0;
   588  0000CA  9B39               	bcf	57,5,b	;volatile
   589                           
   590                           ; BSR set to: 15
   591                           ;PIC_SETUP.c: 54:     TRISAbits.RA0 = 1;
   592  0000CC  8092               	bsf	3986,0,c	;volatile
   593                           
   594                           ; BSR set to: 15
   595                           ;PIC_SETUP.c: 55:     ANSELAbits.ANSA0 = 1;;
   596  0000CE  8138               	bsf	56,0,b	;volatile
   597                           
   598                           ; BSR set to: 15
   599                           ;PIC_SETUP.c: 58:     TRISD5 = 0;
   600  0000D0  9A95               	bcf	3989,5,c	;volatile
   601                           
   602                           ; BSR set to: 15
   603                           ;PIC_SETUP.c: 59:     ANSELDbits.ANSD5 = 0;
   604  0000D2  9B3B               	bcf	59,5,b	;volatile
   605                           
   606                           ; BSR set to: 15
   607                           ;PIC_SETUP.c: 62:     TRISC0 = 0;
   608  0000D4  9094               	bcf	3988,0,c	;volatile
   609                           
   610                           ; BSR set to: 15
   611                           ;PIC_SETUP.c: 63:     TRISC1 = 0;
   612  0000D6  9294               	bcf	3988,1,c	;volatile
   613                           
   614                           ; BSR set to: 15
   615                           ;PIC_SETUP.c: 64:     TRISC2 = 0;
   616  0000D8  9494               	bcf	3988,2,c	;volatile
   617                           
   618                           ; BSR set to: 15
   619                           ;PIC_SETUP.c: 65:     LATCbits.LATC0 = 0;
   620  0000DA  908B               	bcf	3979,0,c	;volatile
   621                           
   622                           ; BSR set to: 15
   623                           ;PIC_SETUP.c: 66:     LATCbits.LATC1 = 0;
   624  0000DC  928B               	bcf	3979,1,c	;volatile
   625                           
   626                           ; BSR set to: 15
   627                           ;PIC_SETUP.c: 67:     LATCbits.LATC2 = 0;
   628  0000DE  948B               	bcf	3979,2,c	;volatile
   629                           
   630                           ; BSR set to: 15
   631  0000E0  0012               	return		;funcret
   632  0000E2                     __end_of_init_pins:
   633                           	opt callstack 0
   634                           
   635 ;; *************** function _init_interrupts *****************
   636 ;; Defined at:
   637 ;;		line 70 in file "PIC_SETUP.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		None
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK0   BANK1
   651 ;;      Params:         0       0       0
   652 ;;      Locals:         0       0       0
   653 ;;      Temps:          0       0       0
   654 ;;      Totals:         0       0       0
   655 ;;Total ram usage:        0 bytes
   656 ;; Hardware stack levels used:    1
   657 ;; Hardware stack levels required when called:    2
   658 ;; This function calls:
   659 ;;		Nothing
   660 ;; This function is called by:
   661 ;;		_SETUP
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           	psect	text7
   666  000126                     __ptext7:
   667                           	opt callstack 0
   668  000126                     _init_interrupts:
   669                           	opt callstack 27
   670                           
   671                           ;PIC_SETUP.c: 73:     PIR1bits.SSP1IF = 0;
   672                           
   673                           ; BSR set to: 15
   674                           ;incstack = 0
   675  000126  969E               	bcf	3998,3,c	;volatile
   676                           
   677                           ;PIC_SETUP.c: 74:     PIE1bits.SSP1IE = 1;
   678  000128  869D               	bsf	3997,3,c	;volatile
   679                           
   680                           ;PIC_SETUP.c: 77:     PIR1bits.ADIF = 0;
   681  00012A  9C9E               	bcf	3998,6,c	;volatile
   682                           
   683                           ;PIC_SETUP.c: 78:     PIE1bits.ADIE = 1;
   684  00012C  8C9D               	bsf	3997,6,c	;volatile
   685                           
   686                           ;PIC_SETUP.c: 81:     INTCONbits.RBIF = 0;
   687  00012E  90F2               	bcf	4082,0,c	;volatile
   688                           
   689                           ;PIC_SETUP.c: 82:     INTCONbits.RBIE = 1;
   690  000130  86F2               	bsf	4082,3,c	;volatile
   691                           
   692                           ;PIC_SETUP.c: 85:     IOCBbits.IOCB5 = 1;
   693  000132  8A62               	bsf	3938,5,c	;volatile
   694                           
   695                           ;PIC_SETUP.c: 88:     IPEN = 0;
   696  000134  9ED0               	bcf	4048,7,c	;volatile
   697                           
   698                           ;PIC_SETUP.c: 91:     INTCONbits.PEIE =1;
   699  000136  8CF2               	bsf	4082,6,c	;volatile
   700                           
   701                           ;PIC_SETUP.c: 94:     INTCONbits.GIE = 1;
   702  000138  8EF2               	bsf	4082,7,c	;volatile
   703  00013A  0012               	return		;funcret
   704  00013C                     __end_of_init_interrupts:
   705                           	opt callstack 0
   706                           
   707 ;; *************** function _SPI1_Initialize *****************
   708 ;; Defined at:
   709 ;;		line 6 in file "SPI.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, status,2
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1
   723 ;;      Params:         0       0       0
   724 ;;      Locals:         0       0       0
   725 ;;      Temps:          0       0       0
   726 ;;      Totals:         0       0       0
   727 ;;Total ram usage:        0 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    2
   730 ;; This function calls:
   731 ;;		Nothing
   732 ;; This function is called by:
   733 ;;		_SETUP
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text8
   738  00013C                     __ptext8:
   739                           	opt callstack 0
   740  00013C                     _SPI1_Initialize:
   741                           	opt callstack 27
   742                           
   743                           ;SPI.c: 9:     SSP1STAT = 0x00;
   744                           
   745                           ;incstack = 0
   746  00013C  0E00               	movlw	0
   747  00013E  6EC7               	movwf	4039,c	;volatile
   748                           
   749                           ;SPI.c: 11:     SSP1CON1 = 0x24;
   750  000140  0E24               	movlw	36
   751  000142  6EC6               	movwf	4038,c	;volatile
   752                           
   753                           ;SPI.c: 14:     SSP1ADD = 0x00;
   754  000144  0E00               	movlw	0
   755  000146  6EC8               	movwf	4040,c	;volatile
   756                           
   757                           ;SPI.c: 15:     SSP1CON2 = 0x00;
   758  000148  0E00               	movlw	0
   759  00014A  6EC5               	movwf	4037,c	;volatile
   760  00014C  0012               	return		;funcret
   761  00014E                     __end_of_SPI1_Initialize:
   762                           	opt callstack 0
   763                           
   764 ;; *************** function _INIT_ADC *****************
   765 ;; Defined at:
   766 ;;		line 4 in file "ADC.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK0   BANK1
   780 ;;      Params:         0       0       0
   781 ;;      Locals:         0       0       0
   782 ;;      Temps:          0       0       0
   783 ;;      Totals:         0       0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels used:    1
   786 ;; Hardware stack levels required when called:    2
   787 ;; This function calls:
   788 ;;		Nothing
   789 ;; This function is called by:
   790 ;;		_SETUP
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           	psect	text9
   795  00014E                     __ptext9:
   796                           	opt callstack 0
   797  00014E                     _INIT_ADC:
   798                           	opt callstack 27
   799                           
   800                           ;ADC.c: 11:     ADCON0 = 0x01;
   801                           
   802                           ;incstack = 0
   803  00014E  0E01               	movlw	1
   804  000150  6EC2               	movwf	4034,c	;volatile
   805                           
   806                           ;ADC.c: 12:     ADCON2 = 0x87;
   807  000152  0E87               	movlw	135
   808  000154  6EC0               	movwf	4032,c	;volatile
   809  000156  0012               	return		;funcret
   810  000158                     __end_of_INIT_ADC:
   811                           	opt callstack 0
   812                           
   813 ;; *************** function _ISR *****************
   814 ;; Defined at:
   815 ;;		line 5 in file "Interrupt_Service_Routine.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;		None
   820 ;; Return value:  Size  Location     Type
   821 ;;                  1    wreg      void 
   822 ;; Registers used:
   823 ;;		wreg, cstack
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMRAM   BANK0   BANK1
   829 ;;      Params:         0       0       0
   830 ;;      Locals:         0       0       0
   831 ;;      Temps:          0       0       0
   832 ;;      Totals:         0       0       0
   833 ;;Total ram usage:        0 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    1
   836 ;; This function calls:
   837 ;;		_WAIT_ADC
   838 ;; This function is called by:
   839 ;;		Interrupt level 2
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	intcode
   844  000008                     __pintcode:
   845                           	opt callstack 0
   846  000008                     _ISR:
   847                           	opt callstack 27
   848                           
   849                           ;incstack = 0
   850  000008  8208               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   851                           
   852                           ;Interrupt_Service_Routine.c: 8:     if(PIR1bits.SSP1IF == 1)
   853  00000A  A69E               	btfss	3998,3,c	;volatile
   854  00000C  D00A               	goto	i2l93
   855                           
   856                           ;Interrupt_Service_Routine.c: 9:     {;Interrupt_Service_Routine.c: 10:         LATC2 = 
      +                          !LATC2;
   857  00000E  B48B               	btfsc	3979,2,c	;volatile
   858  000010  D002               	goto	i2u8_40
   859  000012  848B               	bsf	3979,2,c	;volatile
   860  000014  D001               	goto	i2u9_45
   861  000016                     i2u8_40:
   862  000016  948B               	bcf	3979,2,c	;volatile
   863  000018                     i2u9_45:
   864                           
   865                           ;Interrupt_Service_Routine.c: 11:         if(SSP1CON1bits.WCOL) SSP1CON1bits.WCOL = 0;
   866  000018  BEC6               	btfsc	4038,7,c	;volatile
   867  00001A  9EC6               	bcf	4038,7,c	;volatile
   868                           
   869                           ;Interrupt_Service_Routine.c: 12:         recived = SSP1BUF;
   870  00001C  CFC9 F006          	movff	4041,_recived	;volatile
   871                           
   872                           ;Interrupt_Service_Routine.c: 14:         PIR1bits.SSP1IF = 0;
   873  000020  969E               	bcf	3998,3,c	;volatile
   874  000022                     i2l93:
   875                           
   876                           ;Interrupt_Service_Routine.c: 19:     if(PIR1bits.ADIF == 1)
   877  000022  AC9E               	btfss	3998,6,c	;volatile
   878  000024  D00B               	goto	i2l1000
   879                           
   880                           ;Interrupt_Service_Routine.c: 20:     {;Interrupt_Service_Routine.c: 21:         LATC0 =
      +                           !LATC0;
   881  000026  B08B               	btfsc	3979,0,c	;volatile
   882  000028  D002               	goto	i2u12_40
   883  00002A  808B               	bsf	3979,0,c	;volatile
   884  00002C  D001               	goto	i2u13_45
   885  00002E                     i2u12_40:
   886  00002E  908B               	bcf	3979,0,c	;volatile
   887  000030                     i2u13_45:
   888                           
   889                           ;Interrupt_Service_Routine.c: 23:         WAIT_ADC();
   890  000030  ECAC  F000         	call	_WAIT_ADC	;wreg free
   891                           
   892                           ;Interrupt_Service_Routine.c: 24:         ADC_VALUE = ADRESL;
   893  000034  CFC3 F001          	movff	4035,_ADC_VALUE	;volatile
   894  000038  6A02               	clrf	_ADC_VALUE+1,c
   895                           
   896                           ;Interrupt_Service_Routine.c: 26:         PIR1bits.ADIF = 0;
   897  00003A  9C9E               	bcf	3998,6,c	;volatile
   898  00003C                     i2l1000:
   899                           
   900                           ;Interrupt_Service_Routine.c: 31:     if(INTCONbits.RBIF == 1)
   901  00003C  A0F2               	btfss	4082,0,c	;volatile
   902  00003E  D00A               	goto	i2l97
   903                           
   904                           ;Interrupt_Service_Routine.c: 32:     {;Interrupt_Service_Routine.c: 33:         LATC1 =
      +                           !LATC1;
   905  000040  B28B               	btfsc	3979,1,c	;volatile
   906  000042  D002               	goto	i2u15_40
   907  000044  828B               	bsf	3979,1,c	;volatile
   908  000046  D001               	goto	i2u16_45
   909  000048                     i2u15_40:
   910  000048  928B               	bcf	3979,1,c	;volatile
   911  00004A                     i2u16_45:
   912                           
   913                           ;Interrupt_Service_Routine.c: 34:         digital_value = PORTBbits.RB5;
   914  00004A  0E00               	movlw	0
   915  00004C  BA81               	btfsc	3969,5,c	;volatile
   916  00004E  0E01               	movlw	1
   917  000050  6E07               	movwf	_digital_value,c
   918                           
   919                           ;Interrupt_Service_Routine.c: 36:         INTCONbits.RBIF = 0;
   920  000052  90F2               	bcf	4082,0,c	;volatile
   921  000054                     i2l97:
   922  000054  9208               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   923  000056  0011               	retfie		f
   924  000058                     __end_of_ISR:
   925                           	opt callstack 0
   926                           
   927 ;; *************** function _WAIT_ADC *****************
   928 ;; Defined at:
   929 ;;		line 24 in file "ADC.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;		None
   932 ;; Auto vars:     Size  Location     Type
   933 ;;		None
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		None
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK0   BANK1
   943 ;;      Params:         0       0       0
   944 ;;      Locals:         0       0       0
   945 ;;      Temps:          0       0       0
   946 ;;      Totals:         0       0       0
   947 ;;Total ram usage:        0 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; This function calls:
   950 ;;		Nothing
   951 ;; This function is called by:
   952 ;;		_ISR
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text11
   957  000158                     __ptext11:
   958                           	opt callstack 0
   959  000158                     _WAIT_ADC:
   960                           	opt callstack 27
   961                           
   962                           ;ADC.c: 26:     while(ADCON0bits.GO==1);
   963                           
   964                           ;incstack = 0
   965  000158  A2C2               	btfss	4034,1,c	;volatile
   966  00015A  0012               	return	
   967  00015C  D7FD               	goto	_WAIT_ADC
   968  00015E                     __end_of_WAIT_ADC:
   969                           	opt callstack 0
   970  0000                     
   971                           	psect	rparam
   972  0000                     
   973                           	psect	temp
   974  000008                     btemp:
   975                           	opt callstack 0
   976  000008                     	ds	1
   977  0000                     int$flags	set	btemp
   978  0000                     wtemp8	set	btemp+1
   979  0000                     ttemp5	set	btemp+1
   980  0000                     ttemp6	set	btemp+4
   981  0000                     ttemp7	set	btemp+8
   982                           tosu	equ	0xFFF
   983                           tosh	equ	0xFFE
   984                           tosl	equ	0xFFD
   985                           stkptr	equ	0xFFC
   986                           pclatu	equ	0xFFB
   987                           pclath	equ	0xFFA
   988                           pcl	equ	0xFF9
   989                           tblptru	equ	0xFF8
   990                           tblptrh	equ	0xFF7
   991                           tblptrl	equ	0xFF6
   992                           tablat	equ	0xFF5
   993                           prodh	equ	0xFF4
   994                           prodl	equ	0xFF3
   995                           indf0	equ	0xFEF
   996                           postinc0	equ	0xFEE
   997                           postdec0	equ	0xFED
   998                           preinc0	equ	0xFEC
   999                           plusw0	equ	0xFEB
  1000                           fsr0h	equ	0xFEA
  1001                           fsr0l	equ	0xFE9
  1002                           wreg	equ	0xFE8
  1003                           indf1	equ	0xFE7
  1004                           postinc1	equ	0xFE6
  1005                           postdec1	equ	0xFE5
  1006                           preinc1	equ	0xFE4
  1007                           plusw1	equ	0xFE3
  1008                           fsr1h	equ	0xFE2
  1009                           fsr1l	equ	0xFE1
  1010                           bsr	equ	0xFE0
  1011                           indf2	equ	0xFDF
  1012                           postinc2	equ	0xFDE
  1013                           postdec2	equ	0xFDD
  1014                           preinc2	equ	0xFDC
  1015                           plusw2	equ	0xFDB
  1016                           fsr2h	equ	0xFDA
  1017                           fsr2l	equ	0xFD9
  1018                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       7
    BANK0           160      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _SETUP
                          _START_ADC
                           _Turn_OFF
                            _Turn_ON
 ---------------------------------------------------------------------------------
 (1) _Turn_ON                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Turn_OFF                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _START_ADC                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SETUP                                                0     0      0       0
                           _INIT_ADC
                    _SPI1_Initialize
                    _init_interrupts
                          _init_pins
                     _set_oscilators
 ---------------------------------------------------------------------------------
 (2) _set_oscilators                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_pins                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupts                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INIT_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
                           _WAIT_ADC
 ---------------------------------------------------------------------------------
 (4) _WAIT_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SETUP
     _INIT_ADC
     _SPI1_Initialize
     _init_interrupts
     _init_pins
     _set_oscilators
   _START_ADC
   _Turn_OFF
   _Turn_ON

 _ISR (ROOT)
   _WAIT_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1FF      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       5        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      0       7       1        7.4%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       7       6        0.0%
DATA                 0      0       7       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jan  8 07:18:52 2020

            __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000               __CFG_LVP$ON 000000  
                     l970 0088                       l962 006E                       l956 0060  
                     l974 0094                       l966 007A                       l976 009A  
                     l984 00A8         ??_init_interrupts 0000              __CFG_CPB$OFF 000000  
            __CFG_CPD$OFF 000000                       _ISR 0008                       _msg 0005  
                     wreg 000FE8                      ?_ISR 0000                      _LATA 000F89  
                    _LATB 000F8A                      _LATC 000F8B                      _LATD 000F8C  
                    _IPEN 007E87                      i2l93 0022                      i2l97 0054  
                    _main 005C                      btemp 0008             __CFG_BORV$190 000000  
                    start 0058             __CFG_IESO$OFF 000000              ___param_bank 000000  
                   ??_ISR 0000          __end_of_INIT_ADC 0158                     ?_main 0000  
         __end_of_Turn_ON 0162                     _LATC0 007C58                     _LATC1 007C59  
                   _LATC2 007C5A                     _LATD5 007C65            __CFG_DEBUG$OFF 000000  
                   _SETUP 0110             __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000  
        __end_of_WAIT_ADC 015E            __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000  
          __CFG_EBTR1$OFF 000000             __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000  
           __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000        __size_of_START_ADC 0004  
      __CFG_MCLRE$EXTMCLR 000000                     ttemp5 0009                     ttemp6 000C  
                   ttemp7 0010                     status 000FD8                     wtemp8 0009  
          __CFG_HFOFST$ON 000000  __size_of_SPI1_Initialize 0012            __CFG_PBADEN$ON 000000  
         __initialization 00FA              __end_of_main 00AE                    ??_main 0000  
           __activetblptr 000000                    ?_SETUP 0000                    _ADCON0 000FC2  
                  _ADCON2 000FC0                    _ADRESL 000FC3          __end_of_Turn_OFF 0166  
                  _ANSELC 000F3A                    i2l1000 003C            __CFG_WDTEN$OFF 000000  
                  i2u8_40 0016                    _TRISC0 007CA0                    _TRISA5 007C95  
                  _TRISC1 007CA1                    _TRISC2 007CA2                    _TRISC3 007CA3  
                  _TRISB5 007C9D                    _TRISC4 007CA4                    _TRISC5 007CA5  
                  i2u9_45 0018                    _TRISD5 007CAD            __CFG_XINST$OFF 000000  
          __CFG_STVREN$ON 000000                 ??_Turn_ON 0000         __end_of_START_ADC 016A  
                  clear_0 0100                __accesstop 0060   __end_of__initialization 0106  
               ?_INIT_ADC 0000             ___rparam_used 000001             __end_of_SETUP 0126  
         _init_interrupts 0126            __pcstackCOMRAM 0000                 ?_WAIT_ADC 0000  
       ??_SPI1_Initialize 0000                   ??_SETUP 0000           __CFG_PLLCFG$OFF 000000  
              ??_INIT_ADC 0000        __size_of_init_pins 0034        __CFG_CCP2MX$PORTC1 000000  
              ??_WAIT_ADC 0000   __size_of_set_oscilators 0018        __CFG_CCP3MX$PORTB5 000000  
               ?_Turn_OFF 0000                   i2u12_40 002E                   i2u13_45 0030  
                 i2u15_40 0048                   i2u16_45 004A                   _OSCTUNE 000F9B  
                 _SSP1ADD 000FC8                   _SSP1BUF 000FC9   __end_of_init_interrupts 013C  
               _ADC_VALUE 0001                 _ADC_Value 0003           __CFG_PWRTEN$OFF 000000  
                 __Hparam 0000                   __Lparam 0000                   _Turn_ON 015E  
                 __pcinit 00FA                ??_Turn_OFF 0000                   __ramtop 0200  
                 __ptext0 005C                   __ptext1 015E                   __ptext2 0162  
                 __ptext3 0166                   __ptext4 0110                   __ptext5 00E2  
                 __ptext6 00AE                   __ptext7 0126                   __ptext8 013C  
                 __ptext9 014E              __size_of_ISR 0050         __end_of_init_pins 00E2  
                 _recived 0006      end_of_initialization 0106                   postinc0 000FEE  
               _PORTBbits 000F81                 _START_ADC 0166                 _TRISAbits 000F92  
        ?_init_interrupts 0000           _SPI1_Initialize 013C         __size_of_INIT_ADC 000A  
          _set_oscilators 00E2         __size_of_WAIT_ADC 0006                ?_START_ADC 0000  
     start_initialization 00FA               __end_of_ISR 0058    __end_of_set_oscilators 00FA  
       __size_of_Turn_OFF 0004               __pbssCOMRAM 0001   __end_of_SPI1_Initialize 014E  
         ?_set_oscilators 0000                 __pintcode 0008                  ?_Turn_ON 0000  
        __CFG_PRICLKEN$ON 000000               ??_START_ADC 0000            __size_of_SETUP 0016  
               _init_pins 00AE                  _IOCBbits 000F62                  _LATCbits 000F8B  
                _INIT_ADC 014E                  _PIE1bits 000F9D                  _PIR1bits 000F9E  
        __CFG_WDTPS$32768 000000                  _WAIT_ADC 0158                  _SSP1CON1 000FC6  
                _SSP1CON2 000FC5             _digital_value 0007                  _SSP1STAT 000FC7  
              _ADCON0bits 000FC2          ?_SPI1_Initialize 0000                ?_init_pins 0000  
                __Hrparam 0000                  __Lrparam 0000        __CFG_BOREN$SBORDIS 000000  
       __CFG_P2BMX$PORTD2 000000          __size_of_Turn_ON 0004                  _Turn_OFF 0162  
              _ANSELAbits 000F38                _ANSELBbits 000F39                _ANSELDbits 000F3B  
                __ptext11 0158              _SSP1CON1bits 000FC6               _OSCCON2bits 000FD2  
           __size_of_main 0052  __size_of_init_interrupts 0016                  int$flags 0008  
              _INTCONbits 000FF2               ??_init_pins 0000                  intlevel2 0000  
        ??_set_oscilators 0000                _OSCCONbits 000FD3         __CFG_T3CMX$PORTC0 000000  
       __CFG_FOSC$INTIO67 000000  
